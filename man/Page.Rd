% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/page.R
\name{Page}
\alias{Page}
\title{A questionnaire Page.}
\description{
Each Page corresponds to a page within the app/questionnaire.
}
\details{
Pages are created by calling the different life-cycle functions one
after another. The order in which they are called is as follows:
\enumerate{
\item \code{condition} (\code{session})
Only if this evaluated to \code{TRUE}, continue.
\item \code{run_before} (\code{session})
\item \code{render_before} (\code{session}, \code{run_before_output})
\item \code{render} (\code{session}, \code{run_before_output})
\item \code{render_after} (\code{session}, \code{run_before_output})
The outputs from \code{render_before}, \code{render} & \code{render_after} are
stitched together to produce the final HTML output of the page.
\item \code{run_after} (\code{session}, \code{input})
Run when the user leaves the page. Any user input has to be
handled here.
}
}
\examples{

## ------------------------------------------------
## Method `Page$new`
## ------------------------------------------------

one_page_questionnaire <- list(
  Page$new(page_id = "example",
  render = function(session, run_before_output, ...) {
    shiny::tags$h1("My Test Page")
  })
)

## ------------------------------------------------
## Method `Page$set_page_data`
## ------------------------------------------------

\dontrun{
# This code is expected to be run in e.g. run_before
page$set_page_data(session = session, values = list(
  user_answer = "Some User Answer"
))
}

## ------------------------------------------------
## Method `Page$get_page_data`
## ------------------------------------------------

\dontrun{
# This code is expected to be run in e.g. run_before
page$get_page_data(session = session, key = "user_answer")
}

## ------------------------------------------------
## Method `Page$set_question_data`
## ------------------------------------------------

\dontrun{
# This code is expected to be run in e.g. run_before
page$set_question_data(
  session = session,
  question_text = "How are you?"
)
page$set_question_data(
  session = session,
  response_text = "I'm doing great!"
)
}

## ------------------------------------------------
## Method `Page$get_question_data`
## ------------------------------------------------

\dontrun{
# This code is expected to be run in e.g. run_before
page$get_question_data(
  session = session,
  key = "response_text",
  default = "alright"
)
}
}
\seealso{
set_question_data

get_question_data
}
\keyword{internal}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{page_id}}{A unique string identifiying this page. Used to store data.}

\item{\code{condition}}{Function to check whether the page should be shown.}

\item{\code{run_before}}{Function that prepares data to render the page.}

\item{\code{render_before}}{Called exactly like \code{render}. Output will be added just \emph{before} the output from render.}

\item{\code{render}}{Function to render the page. (Required)}

\item{\code{render_after}}{Called exactly like \code{render}. Output will be added just \emph{after} the output from render.}

\item{\code{run_after}}{Function that handles the user input when they leave the page.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Page-new}{\code{Page$new()}}
\item \href{#method-Page-check_condition}{\code{Page$check_condition()}}
\item \href{#method-Page-execute_run_before}{\code{Page$execute_run_before()}}
\item \href{#method-Page-execute_render}{\code{Page$execute_render()}}
\item \href{#method-Page-execute_run_after}{\code{Page$execute_run_after()}}
\item \href{#method-Page-set_page_data}{\code{Page$set_page_data()}}
\item \href{#method-Page-get_page_data}{\code{Page$get_page_data()}}
\item \href{#method-Page-set_question_data}{\code{Page$set_question_data()}}
\item \href{#method-Page-get_question_data}{\code{Page$get_question_data()}}
\item \href{#method-Page-clone}{\code{Page$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Page-new"></a>}}
\if{latex}{\out{\hypertarget{method-Page-new}{}}}
\subsection{Method \code{new()}}{
Create a new questionnaire Page.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Page$new(
  page_id,
  render,
  condition = NULL,
  run_before = NULL,
  render_before = NULL,
  render_after = NULL,
  run_after = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{page_id}}{A unique string identifiying this page. (Required)
This will be used to store data.}

\item{\code{render}}{Function to render the page. (Required)
It is expected, that the function returns a list of shiny tags.
Its output will be combined with \code{render_before} and \code{render_after.}
This function has access to the shiny \code{session} and the \code{run_before_output.}}

\item{\code{condition}}{Function to check whether the page should be shown.
When this function returns \code{TRUE}, the page will be shown upon navigating
there, if it returns \code{FALSE} it will be skipped.
Defaults to show the page.
This function has access to the shiny \code{session}.}

\item{\code{run_before}}{Function that prepares data to render the page.
Called immediately after condition (if \code{condition} returned \code{TRUE}).
Whatever run_before returns is available in render, render_before and
render_after as \code{run_before_output}.
This function has access to the shiny \code{session}.}

\item{\code{render_before}}{Called exactly like \code{render}. Output will be added
just \emph{before} the output from render. Mainly used to add additional
outputs to existing pages.}

\item{\code{render_after}}{Called exactly like \code{render}. Output will be added
just \emph{after} the output from render. Mainly used to add additional
outputs to existing pages.}

\item{\code{run_after}}{Function that handles the user input when they leave the
page. This function has access to the shiny session and shiny input.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new \code{Page} object.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{one_page_questionnaire <- list(
  Page$new(page_id = "example",
  render = function(session, run_before_output, ...) {
    shiny::tags$h1("My Test Page")
  })
)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Page-check_condition"></a>}}
\if{latex}{\out{\hypertarget{method-Page-check_condition}{}}}
\subsection{Method \code{check_condition()}}{
Called internally by the shiny server.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Page$check_condition(session, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{session}}{The shiny session}

\item{\code{...}}{All additional arguments are passed along}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Page-execute_run_before"></a>}}
\if{latex}{\out{\hypertarget{method-Page-execute_run_before}{}}}
\subsection{Method \code{execute_run_before()}}{
Called internally by the shiny server.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Page$execute_run_before(session, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{session}}{The shiny session}

\item{\code{...}}{All additional arguments are passed along}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Page-execute_render"></a>}}
\if{latex}{\out{\hypertarget{method-Page-execute_render}{}}}
\subsection{Method \code{execute_render()}}{
Called internally by the shiny server.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Page$execute_render(session, run_before_output, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{session}}{The shiny session}

\item{\code{run_before_output}}{The output from \code{run_before}}

\item{\code{...}}{All additional arguments are passed along}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Page-execute_run_after"></a>}}
\if{latex}{\out{\hypertarget{method-Page-execute_run_after}{}}}
\subsection{Method \code{execute_run_after()}}{
Called internally by the shiny server.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Page$execute_run_after(session, input, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{session}}{The shiny session}

\item{\code{input}}{The shiny input}

\item{\code{...}}{All additional arguments are passed along}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Page-set_page_data"></a>}}
\if{latex}{\out{\hypertarget{method-Page-set_page_data}{}}}
\subsection{Method \code{set_page_data()}}{
Set some values in the page/questionnaire data in the current session.

Data is automatically linked to a page's page_id.
Note that page data is \emph{not} automatically saved and you probably want
to use page$set_question_data instead.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Page$set_page_data(session, values)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{session}}{The shiny session}

\item{\code{values}}{A named list of values to add / overwrite in the page data.
Values are added / overwritten based on the names provided in the list.}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
# This code is expected to be run in e.g. run_before
page$set_page_data(session = session, values = list(
  user_answer = "Some User Answer"
))
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Page-get_page_data"></a>}}
\if{latex}{\out{\hypertarget{method-Page-get_page_data}{}}}
\subsection{Method \code{get_page_data()}}{
Get questionnaire / page data.

Note that page data is \emph{not} automatically saved and you probably want
to use page$get_question_data instead.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Page$get_page_data(session, key = NULL, default = NULL, page_id = self$page_id)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{session}}{The shiny session}

\item{\code{key}}{The key for which to retrieve a value. (Optional)
If no key is provided, the page's whole data will be returned.}

\item{\code{default}}{A default value to return if the key or page is not
present in the questionnaire data.}

\item{\code{page_id}}{The page for which to retrieve data.
Defaults to the page where data the function is being called from.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The page data value at the provided key or the whole page's data
if no key is provided.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
# This code is expected to be run in e.g. run_before
page$get_page_data(session = session, key = "user_answer")
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Page-set_question_data"></a>}}
\if{latex}{\out{\hypertarget{method-Page-set_question_data}{}}}
\subsection{Method \code{set_question_data()}}{
Set / save data for a question.

Question data is automatically saved.
There can be multiple questions on any given page.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Page$set_question_data(
  session,
  page_id = self$page_id,
  question_id = NULL,
  question_text = NULL,
  response_text = NULL,
  response_id = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{session}}{The shiny session}

\item{\code{page_id}}{The page for which to retrieve data.
Defaults to the page where data the function is being called from.}

\item{\code{question_id}}{The question for which to retrieve data.
This \emph{has} to be different for different questions on the same page.
Defaults to the page_id.}

\item{\code{question_text}}{The question's text. (optional)}

\item{\code{response_text}}{The user's response in text form. (optional)}

\item{\code{response_id}}{The user's response as an id from a set of choices.
(optional)}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
# This code is expected to be run in e.g. run_before
page$set_question_data(
  session = session,
  question_text = "How are you?"
)
page$set_question_data(
  session = session,
  response_text = "I'm doing great!"
)
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Page-get_question_data"></a>}}
\if{latex}{\out{\hypertarget{method-Page-get_question_data}{}}}
\subsection{Method \code{get_question_data()}}{
Retrieve data for a question.

Each page in the questionnaire can have multiple questions on it.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Page$get_question_data(
  session,
  page_id = self$page_id,
  question_id = NULL,
  key = NULL,
  default = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{session}}{The shiny session}

\item{\code{page_id}}{The page for which to retrieve data.
Defaults to the page where data the function is being called from.}

\item{\code{question_id}}{The question for which to retrieve data.
This \emph{has} to be different for different questions on the same page.
Defaults to the page_id.}

\item{\code{key}}{The key for which to retrieve a value. (Optional)
If no key is provided, the page's whole data will be returned.}

\item{\code{default}}{A default value to return if the key or page is not
present in the questionnaire data.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The question's data.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
# This code is expected to be run in e.g. run_before
page$get_question_data(
  session = session,
  key = "response_text",
  default = "alright"
)
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Page-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Page-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Page$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
