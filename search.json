[{"path":"https://occupationmeasurement.github.io/occupationMeasurement/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 occupationMeasurement authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (‚ÄúSoftware‚Äù), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED ‚Äú‚Äù, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/articles/api.html","id":"starting-the-api","dir":"Articles","previous_headings":"","what":"Starting the API","title":"Using the API","text":"Starting API simple, need call api() method. immediately start local plumber server open window API‚Äôs documentation.","code":"# Start the API (and open its documentation) occupationMeasurement::api()"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/articles/api.html","id":"usage","dir":"Articles","previous_headings":"","what":"Usage","title":"Using the API","text":"API designed allow similar usage interactive application, implementing UI logic done manually. recommended use text prompts shiny application (app()) consistency. typical workflow using API follows: Obtain freetext response participant describing occupation tasks. Send freetext response /v1/suggestions get list suggested categories. Present list participant choose option. (always option indicating none suggested categories fit.) suggested category followup questions, retrieve next followup question /v1/next_followup_question present user. (technically possible skip step, quality final codings diminish.) Use code picked suggested category alongside responses followup questions get final occupation category codes /v1/final_codes. simplest workflow possible; explore app recommended, respondent-oriented workflows. API endpoints comes set options / parameters described API‚Äôs documentation. API documentation automatically available starting API, comes option test endpoints provides example code query API.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/articles/api.html","id":"interactive-documentation","dir":"Articles","previous_headings":"","what":"Interactive Documentation","title":"Using the API","text":"easiest way understanding API works, starting locally via api() exploring included Swagger documentation open automatically. Using UI one can interactively explore different API endpoints, input expect output return. api also comes openapi specification endpoint /openapi.json.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/articles/api.html","id":"flow","dir":"Articles","previous_headings":"","what":"Flow","title":"Using the API","text":"Since API multiple endpoints called, expects certain flow requests follow onto order properly function. diagram demonstrates minimal version flow, different API endpoints highlighted bold. complex scenarios possible e.g.¬†implement multiple tries generating job suggestions cases user input ambiguous. Note: flow assumes ‚Äúauxco‚Äù-based suggestion-type used (default), also adds followup questions asked respondents. using different suggestion type, ‚Äúkldb-2010‚Äù ‚Äú/get_suggestions‚Äù endpoint necessary, final encodings might worse quality. diagram showing flow different API requests onto inspiration implement user-facing flow application using api, take look vignette(\"app\") refer interactive app() included package.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/articles/api.html","id":"deployment","dir":"Articles","previous_headings":"","what":"Deployment","title":"Using the API","text":"API comes pre-built Docker image easy deployment server, computer cloud. wish deploy API without using docker, information deploy plumber API can found . Note api() function , default, immediately start API instead returning plumber instance. want access plumber instance additional control deployment, can get calling API via api(start = FALSE).","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/articles/api.html","id":"using-docker","dir":"Articles","previous_headings":"Deployment","what":"Using Docker üê≥","title":"Using the API","text":"easy deployment app, package comes pre-built docker image called ghcr.io/occupationmeasurement/api. test image local machine can run following command command line (assumses Docker installed): detailed information docker images e.g.¬†want build refer docker directory repository.","code":"# Start the api # it can be reached at http://localhost:8000 # Swagger documentation can be viewed at http://localhost:8000/__docs__/ docker run --rm -p 8000:8000 -v $(pwd)/output:/output -e ALLOW_ORIGIN=\"*\" -e REQUIRE_IDENTIFIER=TRUE ghcr.io/occupationmeasurement/api:latest"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/articles/app-database.html","id":"option-1-handling-all-data-the-same-way","dir":"Articles","previous_headings":"","what":"Option 1: Handling all data the same way","title":"Saving App Data in a Database","text":"Let‚Äôs automatically save data database, creating tables need . ‚Äôre using [RSQLite](https://cran.r-project.org/web/packages/RSQLite/index.html) connect SQLite -memory database ease use, can easily substitute using [RMariaDB](https://cran.r-project.org/web/packages/RMariaDB/index.html) MySQL / MariaDB [Rpostgres](https://cran.r-project.org/web/packages/RPostgres/index.html) Postgres (check documentation DBI even options).","code":"library(occupationMeasurement)  # Connect to the database db_connection <- DBI::dbConnect(RSQLite::SQLite(), dbname = \":memory:\")  # Launch the interactive app app(   start = TRUE,   app_settings = create_app_settings(     handle_data = function(table_name, data, ...) {       # Write data into the database and automatically create the table if       # it doesn't exist already       DBI::dbWriteTable(         conn = db_connection,         name = table_name,         value = data,          # Important, to actually add data and not remove any existing data.         append = TRUE       )     },      # Let's not save data in files, when we're already using a database     save_to_file = FALSE   ) )"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/articles/app-database.html","id":"option-2-handling-different-types-of-data-differently","dir":"Articles","previous_headings":"","what":"Option 2: Handling different types of data differently","title":"Saving App Data in a Database","text":"Handling types data way, might bit simple usecase. case ‚Äôs possible distinguish different data types checking value table_name. Depending type data get passed, can handle completely different .","code":"library(occupationMeasurement)  # Connect to the database db_connection <- DBI::dbConnect(RSQLite::SQLite(), dbname = \":memory:\")  # Launch the interactive app app(   start = TRUE,   app_settings = create_app_settings(     handle_data = function(table_name, data, ...) {       # By checking for table_name we can identify which type of data is being handled       if (table_name == \"results_overview\") {         # Write data into the \"results\" table (creating it if necessary)         DBI::dbWriteTable(           conn = db_connection,           name = \"results\",           value = data,            # Important, to actually add data and not remove any existing data.           append = TRUE         )       }        if (table_name == \"answers\") {         # Don't save answers data, just output it into the R console         print(\"'answers' data (not saved):\")         print(data)       }        # Ignoring any other type of data e.g. occupations_suggested     },      # Let's not save data in files, when we're already using a database     save_to_file = FALSE   ) )"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/articles/app-deployment.html","id":"using-shiny-server","dir":"Articles","previous_headings":"","what":"Using shiny-server ‚ú®","title":"Deploying to a Server / the Cloud","text":"Shiny-server application easily run shiny apps server. running instance shiny-server, can easily setup interactive occupationMeasurement shiny app adding new script called app.R following code: can course carry settings / custom questionnaire passed app() complex configuration.","code":"library(occupationMeasurement)  app()"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/articles/app-deployment.html","id":"using-docker","dir":"Articles","previous_headings":"","what":"Using docker üê≥","title":"Deploying to a Server / the Cloud","text":"easy deployment api, package comes pre-built docker image called ghcr.io/occupationmeasurement/app:latest. test image local machine can run following command command line (assumses Docker installed): detailed information docker images e.g.¬†want build refer docker directory repository.","code":"docker run --rm -p 3838:3838 -v $(pwd)/output:/srv/shiny-server/output ghcr.io/occupationmeasurement/app:latest"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/articles/app-questionnaire.html","id":"pages","dir":"Articles","previous_headings":"","what":"Pages üìÉ","title":"Custom Questionnaires / Pages","text":"questionnaires built top pages. New pages can created using function new_page(), documentation essential reading want design pages. exist helper functions make simple create specific types question pages: page_choose_one_option() page_freetext() general page unique page_id identify follows general principle lifecycle functions. lifecycle functions optional, except render function, return shiny HTML tags inputs / outputs displayed. lifecycle functions take least shiny session arguments, arguments depend function (supported arguments listed new_page()). Tip: implementing pages, recommend use ... last parameter allow potentially new parameters added. find useful pre-built pages helper functions easily generate commonly used pages check functions whose name starts page_ reference.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/articles/app-questionnaire.html","id":"page-lifecycle","dir":"Articles","previous_headings":"Pages üìÉ","what":"Page Lifecycle","title":"Custom Questionnaires / Pages","text":"lifecycle page follows: First, condition run check whether page displayed . function returns FALSE page skipped condition following one evaluated. condition TRUE, page shown. function run_before run prepare everything page, followed render generate page‚Äôs actual outputs (ata returned run_before available render name run_before_output). user navigates away page next page, function run_after called can used capture user input save data. , next page‚Äôs condition checked . user wants go back previous page, run_after called previous page shown. condition page user visited checked . detailed description page lifecycle can found documentation new_page().","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/articles/app-questionnaire.html","id":"saving-data","dir":"Articles","previous_headings":"Pages üìÉ","what":"Saving Data","title":"Custom Questionnaires / Pages","text":"existing pages (e.g.¬†page_first_freetext(), page_select_suggestion()) page helpers (e.g.page_choose_one_option(), page_freetext()) automatically save user input (long explicitly disabled app_settings). building pages scratch, however, make sure specify data saved app. can done using set_item_data(). data saved using function, automatically saved data, yet always recommend verifying questionnaire data saved expected starting proper data collection. detailed description data saved default format, examine section ‚Äúdata‚Äù vignette(\"app\").","code":""},{"path":[]},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/articles/app-questionnaire.html","id":"building-your-own","dir":"Articles","previous_headings":"Questionnaires üìë","what":"Building your Own ‚ú®","title":"Custom Questionnaires / Pages","text":"‚Äôre comfortable building pages, building questionnaire trivial, questionnaire merely list pages. example simple questionnaire : general goal package measurement occupations, usually want least include core set pages:","code":"library(occupationMeasurement) library(shiny)  my_simple_questionnaire <- list(   new_page(     page_id = \"test\",     render = function(...) {       return(list(         p(\"Hello!\"),         button_previous(),         button_next()       ))     }   ),    # Create a custom page to choose your favorite meal   page_choose_one_option(     page_id = \"favourite_meal\",     question_text = \"Please pick your favorite kind of meal.\",     list_of_choices = list(       \"Breakfast\" = 1,       \"Lunch\" = 2,       \"Dinner\" = 3     )   ) )  # Test the questionnaire in the app # app(questionnaire = my_simple_questionnaire) list(   # ... some of your pages before ...   page_first_freetext(),   page_second_freetext(),   page_select_suggestion(),   page_none_selected_freetext(),   page_followup(1),   page_followup(2)   # ... some of your pages after ... )"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/articles/app-questionnaire.html","id":"modifying-an-existing-one","dir":"Articles","previous_headings":"Questionnaires üìë","what":"Modifying an Existing One","title":"Custom Questionnaires / Pages","text":"Apart creating new questionnaire scratch, ‚Äôs also possible take existing questionnaire modify suit needs. can modify questionnaire , adding, removing overwriting pages (questionnaire just list, can modified just like one). Alternatively ‚Äôs also possible modify pages (albeit bit complicated). hood, pages essentially also powered lists therefore parameters can just overwritten e.g.¬†removing page‚Äôs condition check can done overwriting via page$condition <- NULL. page‚Äôs different parameters usually depend ‚Äôs much easier accidentaly break something. Therefore general good practice overwrite page‚Äôs function just wrapping , like example .","code":"library(occupationMeasurement) library(shiny)  questionnaire <- questionnaire_web_survey()  # Remove the first page (welcome) questionnaire[[1]] <- NULL  # Use c() to add a new alternative page at the start questionnaire <- c(   list(     new_page(       \"my_welcome\",       render = function() {         return(h1(\"Hello!\"))       }     )   ),   questionnaire )  # Test the questionnaire in the app # app(questionnaire = questionnaire) library(occupationMeasurement) library(shiny)  questionnaire <- questionnaire_web_survey()  # Add some text to page_select_suggestion print(questionnaire[[4]]$page_id) #> [1] \"none_selected_freetext\"  original_select_suggestion_render <- questionnaire[[4]]$render questionnaire[[4]]$render <- function(...) {   return(c(     list(       p(\"~ My custom text before ~\")     ),     original_select_suggestion_render(...)   )) }  # Test the questionnaire in the app # app(questionnaire = questionnaire)"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/articles/app.html","id":"flow","dir":"Articles","previous_headings":"","what":"Flow","title":"Using the Interactive App","text":"flow app questions can quite complicated, tried optimise rate successful codings. created flow diagram illustrate participant guided app, depending responses. None complexity visible users flow completely handled within app. diagram illustrating participant flow within interactive app","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/articles/app.html","id":"configuration","dir":"Articles","previous_headings":"","what":"Configuration","title":"Using the Interactive App","text":"multiple ways changing behaviour contents app. split two main sections: can change information / contents app shown, using different questionnaire can adjust general settings app, data saving options modifying app_settings.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/articles/app.html","id":"different-questionnaires","dir":"Articles","previous_headings":"Configuration","what":"Different Questionnaires","title":"Using the Interactive App","text":"toolbox comes different ready-made questionnaires, default questionnaire_web_survey() self-administered online surveys, questionnaire_interviewer_administered() interviews conducted interviewer, questionnaire_demo() version app includes explanations app works behind scenes. need flexibility, can also modify existing questionnaires create ones scratch. refer detailed explanations available vignette(\"app-questionnaire\").","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/articles/app.html","id":"settings","dir":"Articles","previous_headings":"Configuration","what":"Settings","title":"Using the Interactive App","text":"multiple settings available app change behaves, data saved much . settings need passed app parameter app_settings created using create_app_settings(). can read options function‚Äôs helpfile ?create_app_settings(). ‚Äôre specifically looking save data database, can find detailed explanation vignette(\"app-database\"). settings can also varied individual sessions / interviews, e.g., depend previous question input external questionnaire. modify ‚Äúsession‚Äù-settings pass query parameters: list supported query parameters: respondent_id: Identify users (see section details) tense: may always want ask current job (e.g.¬†someone retired). can switch asking current prior job, switching present past. extra_instructions: conversational interviewing turned ? additional instructions interviwer shown. Can . num_suggestions: many suggestions (maximally) show participants. Can full number / integer. common default 5. settings also described help page ?create_app_settings, defaults set app_settings.","code":"library(occupationMeasurement)  app(   # Use the questionnaire for interviewer-administered interviews   questionnaire = questionnaire_interviewer_administered(),   app_settings = create_app_settings(     # ... specify your custom settings here:      # Collect an interview_id, so that you can merge data from your questionnaire     # and from the app after data collection     require_respondent_id = TRUE,      # Skip follow-up questions related to ISCO skill level     # or ISCO supervisory/managment occupations     # (in case similar questions are already included in your questionnaire)     skip_followup_types = c(\"anforderungsniveau\", \"aufsicht\")      # ...   ) ) # Ask questions in past tense https://{url-to-my-interactive-app}/?tense=past  # Use full range of supported session parameters https://{url-to-my-interactive-app}/?respondent_id=<your_unique_id>&tense=past&extra_instructions=off&num_suggestions=10"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/articles/app.html","id":"identifying-users","dir":"Articles","previous_headings":"Configuration","what":"Identifying Users","title":"Using the Interactive App","text":"want match data external source embed interactive app within another survey, probably want pass unique interview user identifier, called respondent_id. can done adding query parameter named respondent_id URL, .e., https://{url---interactive-app}/?respondent_id=<your_unique_id> ({url---interactive-app} corresponding URL application running  corresponding unique id). want make sure respondent_id always supplied, can enforce setting require_respondent_id = TRUE app_settings.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/articles/app.html","id":"saved-data","dir":"Articles","previous_headings":"","what":"Saved Data","title":"Using the Interactive App","text":"app keep track data , default, automatically save data multiple CSV files. saved response_output_dir (save_to_file TRUE), can configured app_settings (see section information). quickly read important data CSV files, convenience function get_responses() available. Currently 5-6 different formats data saved, see . differentiated different table_names. can see table_names filenames data files, although filenames typically also extra information besides table_name differentiate files different sessions/interviews. plan save data database, can find detailed explanation vignette(\"app-database\").","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/articles/app.html","id":"tables","dir":"Articles","previous_headings":"Saved Data","what":"Tables","title":"Using the Interactive App","text":"five different kinds data, .e.¬†‚Äútables‚Äù, saved right now outlined .","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/articles/app.html","id":"answers","dir":"Articles","previous_headings":"Saved Data > Tables","what":"answers","title":"Using the Interactive App","text":"user‚Äôs answers , one row per question/item. saved, whenever page gets submitted therefore multiple times per participant. unique key made variables session_id, page_id, start item_id.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/articles/app.html","id":"columns","dir":"Articles","previous_headings":"Saved Data > Tables > answers","what":"Columns","title":"Using the Interactive App","text":"respondent_id: external respondent_id match data another source information. present passed via URL. session_id: unique session id, identifying exact session / completion survey. (Format: `respondent_id_Time stamp_Random digit) page_id: id / name, identifying page answer coming . Multiple answers per page possible. start: timestamp user shown page. end: timestamp user submitted page. Response time difference start end. item_id: id / name, identifying item answered, can sometimes multiple items single question multiple questions single page. question_text: text shown responded participant. response_id: id chosen response option respondent, typcially used questions distinct answering options. can also case user ticks e.g.¬†‚Äúdon‚Äôt want respond‚Äù option. response_text: Either raw text free text response corresponding label distinct answering options. question free text question, recommended use response ids texts possible.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/articles/app.html","id":"results_overview","dir":"Articles","previous_headings":"Saved Data > Tables","what":"results_overview","title":"Using the Interactive App","text":"combined version user‚Äôs answers information user . saved end questionnaire therefore per participation. session_id unique key . Note respondent_id necessarily unique (although ) respondent_id can passed multiple times via URL.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/articles/app.html","id":"columns-1","dir":"Articles","previous_headings":"Saved Data > Tables > results_overview","what":"Columns","title":"Using the Interactive App","text":"session_id: unique session id, identifying exaxct session / completion survey. (Format: `respondent_id_Time stamp_Random digit) url_search: search / query part URL. isco_08: International Standard Classification Occupations 2008 (ISCO-08) code respondent. kldb_10: German Klassifikation der Berufe 2010 - erste Fassung (KldB-2010) code respondent. respondent_id: external respondent_id match data another source information. present passed via URL. P_{page_id}Q{item_id}R{id/text}: Two columns every question/item answered respondent. columns correspond naming convention **P_{page_id}Q{item_id}_R_id** response ids **P_{page_id}Q{item_id}_R_text** response texts (see documentation answers additional information).","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/articles/app.html","id":"occupations_suggested","dir":"Articles","previous_headings":"Saved Data > Tables","what":"occupations_suggested","title":"Using the Interactive App","text":"list suggestions shown user. saved moment suggestions generated therefore typically per participation, necessarily. unique key made variables session_id, start, id, auxco_id. list also includes ‚Äú‚Äù response options, ‚Äúresponse‚Äù ‚Äú‚Äù. moment saved suggestion_type auxco-1.2.x.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/articles/app.html","id":"columns-2","dir":"Articles","previous_headings":"Saved Data > Tables > occupations_suggested","what":"Columns","title":"Using the Interactive App","text":"auxco_id: unique identifier suggestion, matching suggestion_type. input_text: free text response used generate suggestions. score: assigned score suggestion. scores roughly correspond probability picked. title: occupation title suggestion. task: task suggestion. main field task_description: detailed description task associated suggestion. kldb_title_short: shortend version suggestion‚Äôs title. notes: Clarifying notes suggestion. displayed user, clarification coded category. has_followup_questions: Whether suggestion followup questions. id: response_id corresponding option. Use also identify ‚Äú‚Äù response options suggested occupations. session_id: unique session id, identifying exaxct session / completion survey. start: timestamp user shown page suggestions.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/articles/app.html","id":"toggle_submitted","dir":"Articles","previous_headings":"Saved Data > Tables","what":"toggle_submitted","title":"Using the Interactive App","text":"Information suggestions clicked expanded (closed) participant. unique key made variables session_id time.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/articles/app.html","id":"columns-3","dir":"Articles","previous_headings":"Saved Data > Tables > toggle_submitted","what":"Columns","title":"Using the Interactive App","text":"respondent_id: external respondent_id match data another source information. present passed via URL. session_id: unique session id, identifying exaxct session / completion survey. toggle_message: brief identifier, showing whether option opened closed option . time: timestamp identifying opened / closed.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/articles/app.html","id":"session_info","dir":"Articles","previous_headings":"Saved Data > Tables","what":"session_info","title":"Using the Interactive App","text":"Information sessions, saved whenever session ended (timeout, upon leaving app stopping server). unique key session_id. mainly useful understanding whether users may start multiple sessions app.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/articles/app.html","id":"columns-4","dir":"Articles","previous_headings":"Saved Data > Tables > session_info","what":"Columns","title":"Using the Interactive App","text":"respondent_id: external respondent_id match data another source information. present passed via URL. session_id: unique session id, identifying exaxct session / completion survey. url_search: search / query part URL. history: String questionnaire page visited. example, 1- indicates session ended first page shown. 1-3-7 indicates three pages shown session ended page 7. previous button pressed, page saved . time_session_ended: Timestamp session_info-record got saved.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/articles/app.html","id":"deployment","dir":"Articles","previous_headings":"","what":"Deployment","title":"Using the Interactive App","text":"want deploy interactive app actual server use production environment can find detailed instructions vignette(\"app-deployment\").","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/articles/occupationMeasurement.html","id":"flow","dir":"Articles","previous_headings":"","what":"Flow","title":"Getting Started","text":"diagram illustrates participants routed interactive occupation coding app. flow exactly implemented interactive app recommend base new implementation e.g.¬†custom survey software also implement flow. diagram illustrating participant flow within interactive app","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/articles/occupationMeasurement.html","id":"interactive-app","dir":"Articles","previous_headings":"","what":"Interactive App","title":"Getting Started","text":"classical way using package using interactive application comes packaged . app comes ‚Äúbatteries-included‚Äù run right --box allow collect data immediately. Detailed information using app, can found vignette(\"app\") help page ?app.","code":"# Run the interactive shiny app occupationMeasurement::app()"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/articles/occupationMeasurement.html","id":"different-questionnaires","dir":"Articles","previous_headings":"Interactive App","what":"Different Questionnaires","title":"Getting Started","text":"‚Äôre course also limited using app default questionnaire. Indeed can use one ready-built questionnaires come app, questionnaire_web_survey() (default),questionnaire_demo() (learn workings tool) questionnaire_interviewer_administered() (guided interviews professional interviewer). Moreover, ‚Äôre also able modify questionnaires just build scratch. can read functionality vignette(\"app-questionnaire\"). dive deeper technical software documentation, however, strongly recommend try app questionnaire_demo() first.","code":"library(occupationMeasurement)  app(   # Learn more about the workings of the app with the demo questionnaire   questionnaire = questionnaire_demo() )"},{"path":[]},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/articles/occupationMeasurement.html","id":"json-api","dir":"Articles","previous_headings":"Alternative Usage","what":"JSON-API","title":"Getting Started","text":"‚Äôre looking integrate package existing setup tool JSON-API comes package might suit better shiny app, due ‚Äôs increased flexibility. information api can read vignette(\"api\") help page ?api.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/articles/occupationMeasurement.html","id":"included-r-functions","dir":"Articles","previous_headings":"Alternative Usage","what":"Included R-Functions","title":"Getting Started","text":"package also exports high-level functions allow generate suggestions work . functions closely related API, reading section using API may helpful higher-level understanding relationship . interesting functions external usage get_job_suggestions(), get_followup_questions() get_final_codes().","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jan Simson. Author, maintainer. Olga Kononykhina. Author. Malte Schierholz. Author, copyright holder.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Simson J, Kononykhina O, Schierholz M (2023). occupationMeasurement: Interactively Measure Occupations Interviews Beyond. https://occupationMeasurement.github.io/occupationMeasurement/, https://github.com/occupationMeasurement/occupationMeasurement.","code":"@Manual{,   title = {occupationMeasurement: Interactively Measure Occupations in Interviews and Beyond},   author = {Jan Simson and Olga Kononykhina and Malte Schierholz},   year = {2023},   note = {https://occupationMeasurement.github.io/occupationMeasurement/, https://github.com/occupationMeasurement/occupationMeasurement}, }"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/index.html","id":"occupationmeasurement-","dir":"","previous_headings":"","what":"Interactively Measure Occupations in Interviews and Beyond","title":"Interactively Measure Occupations in Interviews and Beyond","text":"toolbox help tasks around coding measurement occupations. [online demo1]","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/index.html","id":"about","dir":"","previous_headings":"","what":"About","title":"Interactively Measure Occupations in Interviews and Beyond","text":"Coding people‚Äôs occupations official classifications International Standard Classification Occupations ISCO-08 German KldB-2010 notoriously difficult problem. toolbox designed make easier, helping many tasks surrounding measurement occupations: creating survey collecting data way retrieving final coded responses. detailed overview package refer vignette(\"occupationMeasurement\") take look browseVignettes(\"occupationMeasurement\") see list vignettes describing package. vignettes also available online documentation. Please cite publication using software: Jan Simson, Olga Kononykhina, Malte Schierholz (2023). occupationMeasurement: Comprehensive Toolbox Interactive Occupation Coding Surveys. Journal Open Source Software, 8(88), 5505, https://doi.org/10.21105/joss.05505","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Interactively Measure Occupations in Interviews and Beyond","text":"Prerequisites: R Statistical Software (Version 4.1 higher) package can installed directly CRAN running code : install latest development version GitHub, run need R package remotes available via install.packages(\"remotes\"). package can installed running code :","code":"install.packages(\"occupationMeasurement\") remotes::install_github(\"occupationMeasurement/occupationMeasurement\")"},{"path":[]},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/index.html","id":"using-the-interactive-app","dir":"","previous_headings":"Usage","what":"Using the interactive App","title":"Interactively Measure Occupations in Interviews and Beyond","text":"interactive app easiest way use package: provides fully-featured, interactive survey application collect immediately code occupational data. Starting easy calling app()-function. information interactive app can found vignette(\"app\") help page ?app. app also supports custom questionnaires, can build use adapt one questionnaires included package. E.g., questionnaire_demo() explain functionality app, questionnaire_interviewer_administered() designed read interviewers CATI CAPI surveys. questionnaire_web_survey() intended used internet surveys.","code":"# Run the interactive shiny app occupationMeasurement::app() library(occupationMeasurement)  # Run the app with additional explanations. The best way to get started. app(questionnaire = questionnaire_demo())  # Run the app in interviewer-administered ... app(questionnaire = questionnaire_interviewer_administered()) # or online surveys app(questionnaire = questionnaire_web_survey())"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/index.html","id":"alternative-usage","dir":"","previous_headings":"Usage","what":"Alternative Usage","title":"Interactively Measure Occupations in Interviews and Beyond","text":"Besides interactive app, also two alternative ways using package, varying degrees flexibility convenience: Use included JSON api() use package survey-tool application maximum flexibility. Use R functions directly implement custom functionality package via e.g.¬†get_job_suggestions(). can find information use functionalities vignette(\"occupationMeasurement\").","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/index.html","id":"getting-help--contributing","dir":"","previous_headings":"","what":"Getting Help & Contributing","title":"Interactively Measure Occupations in Interviews and Beyond","text":"encounter issues / bugs package, feel free file issue GitHub, ideally alongside clear reproducible example description. also welcome contributions package. want contribute development package, recommend first open issue discuss ideas plans, working pull request. questions package plan use project, feel free reach one maintainers via email. list maintainers email addresses DESCRIPTION file.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/index.html","id":"package-development","dir":"","previous_headings":"","what":"Package Development","title":"Interactively Measure Occupations in Interviews and Beyond","text":"section relevant developing package . default package install dependencies absolutely needs run. developing package running tests, following packages can installed via snippet .","code":"# Install development dependencies install.packages(c(   \"devtools\",   \"testthat\",   \"shinytest2\",   \"httr\",   \"withr\",   \"callr\",   \"usethis\",   \"mvtnorm\",   \"readxl\",   \"styler\",   \"knitr\",   \"rmarkdown\",   \"DiagrammeR\",   \"sessioninfo\" ))"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/index.html","id":"testing","dir":"","previous_headings":"Package Development","what":"Testing","title":"Interactively Measure Occupations in Interviews and Beyond","text":"included tests can run following snippet. recommended also run detailed check via following snippet.","code":"devtools::test() devtools::check()"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/index.html","id":"formatting","dir":"","previous_headings":"Package Development","what":"Formatting","title":"Interactively Measure Occupations in Interviews and Beyond","text":"making changes code, advised automatically format code {styler} package. can done following snippet.","code":"styler::style_pkg()"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/index.html","id":"documentation","dir":"","previous_headings":"Package Development","what":"Documentation","title":"Interactively Measure Occupations in Interviews and Beyond","text":"documentation website powered {pkgdown}. can rebuilt following snippet. set everything hosting documentation github pages use usethis::use_pkgdown_github_pages(). development, roxygen2::roxygenise() useful update .Rd-files.","code":"pkgdown::build_site()"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/index.html","id":"acknowledgments","dir":"","previous_headings":"","what":"Acknowledgments","title":"Interactively Measure Occupations in Interviews and Beyond","text":"project funded Deutsche Forschungsgemeinschaft (DFG, German Research Foundation) ‚Äì Project numbers 290773872 460037581.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/algo_similarity_based_reasoning.html","id":null,"dir":"Reference","previous_headings":"","what":"Make suggestions using similarity based reasoning. ‚Äî algo_similarity_based_reasoning","title":"Make suggestions using similarity based reasoning. ‚Äî algo_similarity_based_reasoning","text":"Algorithm used corresponds Algorithm #10 (Schierholz, 2019). Note: function used directly, rather step / algorithm get_job_suggestions.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/algo_similarity_based_reasoning.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make suggestions using similarity based reasoning. ‚Äî algo_similarity_based_reasoning","text":"","code":"algo_similarity_based_reasoning(   text_processed,   sim_name = \"wordwise\",   probabilities = occupationMeasurement::pretrained_models$similarity_based_reasoning,   ... )"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/algo_similarity_based_reasoning.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make suggestions using similarity based reasoning. ‚Äî algo_similarity_based_reasoning","text":"text_processed processed user input. provided get_job_suggestions. sim_name similarity measure use. Possible values \"wordwise\" \"substring\". probabilities Trained probabilities used, defaults one bundled package. See pretrained_models. pretrained model always predicts 5-digit code 2010 German Classification Occupations, exceptions: -0004 stands 'precise enough/uncodable', -0006 stands 'Multiple Jobs', -0012 stands 'Blue-collar workers', -0019 stands 'Volunteer/Social Service', -0030 stands 'Student assistant'. ... Additional arguments may passed get_job_suggestions(), ignored function.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/algo_similarity_based_reasoning.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make suggestions using similarity based reasoning. ‚Äî algo_similarity_based_reasoning","text":"data.table suggestions NULL suggestions found.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/algo_similarity_based_reasoning.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Make suggestions using similarity based reasoning. ‚Äî algo_similarity_based_reasoning","text":"Schierholz, M. (2019). New Methods Job Occupation Classification (Ph.D. Thesis). University Mannheim.","code":""},{"path":[]},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/algo_similarity_based_reasoning.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make suggestions using similarity based reasoning. ‚Äî algo_similarity_based_reasoning","text":"","code":"data.table::setDTthreads(1)  if (FALSE) { # Use with default settings if (interactive()) {   get_job_suggestions(     \"Arzt\",     steps = list(       simbased_default = list(         algorithm = algo_similarity_based_reasoning       )     )   ) }  # Use with substring similarity if (interactive()) {  get_job_suggestions(    \"Arzt\",    steps = list(      simbased_substring = list(        algorithm = algo_similarity_based_reasoning,        parameters = list(          sim_name = \"substring\"        )      )    )  ) }  # Comparison of algo_similarity_based_reasoning() with get_job_suggestions()  # Example of using algo_similarity_based_reasoning() directly. Not recommended. if (interactive()) {   algo_similarity_based_reasoning(     preprocess_string(\"Arzt\"),     sim_name = \"wordwise\"   )[order(score, decreasing = TRUE)] }  # Same output as before, but the function is more adaptable. if (interactive()) {   get_job_suggestions(     \"Arzt\",     suggestion_type = \"kldb-2010\",     num_suggestions = 1500,     steps = list(       simbased_default = list(         algorithm = algo_similarity_based_reasoning,         parameters = list(           sim_name = \"wordwise\"         )       )     )   )[, list(kldb_id, score, sim_name, kldb_id_title = title)] } }"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/api.html","id":null,"dir":"Reference","previous_headings":"","what":"Start the occupation coding API. ‚Äî api","title":"Start the occupation coding API. ‚Äî api","text":"Start occupation coding API.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Start the occupation coding API. ‚Äî api","text":"","code":"api(   start = TRUE,   log_to_file = FALSE,   file = system.file(\"plumber\", \"api\", \"plumber.R\", package = \"occupationMeasurement\"),   log_to_console = TRUE,   log_filepath = file.path(\"output\", \"log_api.csv\"),   require_identifier = FALSE,   allow_origin = NULL )"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start the occupation coding API. ‚Äî api","text":"start Whether immediately start api. (Defaults TRUE) log_to_file Whether requests logged file. Defaults FALSE. Note: file format used CSV file easier analysis. file Path plumber.R file describing API. Defaults plumber/api/plumber.R within installed package. Refer file understand API implemented. log_to_console Whether requests logged console. Defaults TRUE. log_filepath path CSV file save structured logs. require_identifier Whether identifier added api requests order match / identify requests afterwards. Defaults FALSE. allow_origin Domain allow cross origin requests (CORS). API running different domain / server application using , website's root provided e.g. \"https://occupationMeasurement.github.io\". information see plumber security page, MDN. Defaults NULL set header .","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Start the occupation coding API. ‚Äî api","text":"Plumber router","code":""},{"path":[]},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/api.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Start the occupation coding API. ‚Äî api","text":"","code":"data.table::setDTthreads(1)  if (interactive()) {   # Get the plumber router   router <- api(     start = FALSE,     # If this is TRUE, the log directory will immediately be created     log_to_file = FALSE   )   # Start the router   plumber::pr_run(router) }  if (interactive()) {   # Immediately start the API   api(start = TRUE) }"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/app.html","id":null,"dir":"Reference","previous_headings":"","what":"Get an instance of the interactive shiny occupation coding app. ‚Äî app","title":"Get an instance of the interactive shiny occupation coding app. ‚Äî app","text":"Printing returned instance returning without saving variable start app.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get an instance of the interactive shiny occupation coding app. ‚Äî app","text":"","code":"app(   questionnaire = questionnaire_web_survey(),   app_settings = create_app_settings(save_to_file = TRUE),   css_file = NULL,   resource_dir = system.file(\"www\", package = \"occupationMeasurement\"),   ... )"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get an instance of the interactive shiny occupation coding app. ‚Äî app","text":"questionnaire questionnaire load. (Defaults questionnaire returned questionnaire_web_survey().) app_settings app_settings use. Check documentation create_app_settings learn options. css_file Path CSS file included app. resource_dir directory static files e.g. styles. want load additional resources outside package, rather shiny::addResourcePath rather parameter. ... additional parameters forwarded shiny::shinyApp().","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get an instance of the interactive shiny occupation coding app. ‚Äî app","text":"shiny app instance.","code":""},{"path":[]},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/app.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get an instance of the interactive shiny occupation coding app. ‚Äî app","text":"","code":"data.table::setDTthreads(1)  if (FALSE) { app_instance <- app(   app_settings = create_app_settings(     # Important to save results from the app     save_to_file = TRUE   ) )  # Start the app if (interactive()) {   app_instance } }"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/auxco.html","id":null,"dir":"Reference","previous_headings":"","what":"German Auxiliary Classification of Occupations (AuxCO) v1.2.3 ‚Äî auxco","title":"German Auxiliary Classification of Occupations (AuxCO) v1.2.3 ‚Äî auxco","text":"Berufs-Hilfsklassifikation mit T√§tigkeitsbeschreibungen.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/auxco.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"German Auxiliary Classification of Occupations (AuxCO) v1.2.3 ‚Äî auxco","text":"","code":"auxco"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/auxco.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"German Auxiliary Classification of Occupations (AuxCO) v1.2.3 ‚Äî auxco","text":"list data.tables: categories data.table. Main list AuxCO categories including descriptions etc. distinctions data.table. List highly similar AuxCO categories one may want present disambiguate . followup_questions data.table. Follow-questions specify final codings based AuxCO categories. Includes questions' answer options well information encode complex occupations depend multiple answers. mapping_from_isco data.table. Mapping ISCO-08 categories AuxCO categories. mapping_from_kldb data.table. Mapping KldB 2010 categories AuxCO categories.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/auxco.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"German Auxiliary Classification of Occupations (AuxCO) v1.2.3 ‚Äî auxco","text":"Schierholz, Malte; Brenner, Lorraine; Cohausz, Lea; Damminger, Lisa; Fast, Lisa; H√∂rig, Ann-Kathrin; Huber, Anna-Lena; Ludwig, Theresa; Petry, Annabell; Tschischka, Laura (2018): Vorstellung einer Hilfsklassifikation mit T√§tigkeitsbeschreibungen f√ºr Zwecke der Berufskodierung. (IAB-Discussion Paper, 2018), N√ºrnberg, 45 S. https://www.iab.de/183/section.aspx/Publikation/k180509301","code":""},{"path":[]},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/button_next.html","id":null,"dir":"Reference","previous_headings":"","what":"Go to the next page ‚Äî button_next","title":"Go to the next page ‚Äî button_next","text":"Buttons navigate pages.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/button_next.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Go to the next page ‚Äî button_next","text":"","code":"button_next(label = \"Weiter\")  button_previous(label = \"Zur√ºck\")"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/button_next.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Go to the next page ‚Äî button_next","text":"label label button .","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/button_next.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Go to the next page ‚Äî button_next","text":"shiny Action Button","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/button_next.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Go to the next page ‚Äî button_next","text":"button_previous(): Go previous page","code":""},{"path":[]},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/button_next.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Go to the next page ‚Äî button_next","text":"","code":"data.table::setDTthreads(1)  if (FALSE) { very_simple_page <- new_page(   page_id = \"example\",   render = function(session, run_before_output, input, output, ...) {     list(       shiny::tags$h1(\"My test page\"),       button_previous(),       button_next()     )   } ) }"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/check_condition.html","id":null,"dir":"Reference","previous_headings":"","what":"Called internally by the shiny server. ‚Äî check_condition","title":"Called internally by the shiny server. ‚Äî check_condition","text":"Called internally shiny server.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/check_condition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Called internally by the shiny server. ‚Äî check_condition","text":"","code":"check_condition(page, session, ...)"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/check_condition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Called internally by the shiny server. ‚Äî check_condition","text":"session shiny session ... additional arguments passed along","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/convert_suggestions.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert suggestion from one suggestion format into the other ‚Äî convert_suggestions","title":"Convert suggestion from one suggestion format into the other ‚Äî convert_suggestions","text":"Convert suggestion one suggestion format ","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/convert_suggestions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert suggestion from one suggestion format into the other ‚Äî convert_suggestions","text":"","code":"convert_suggestions(suggestions, from, to, suggestion_type_options = list())"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/convert_suggestions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert suggestion from one suggestion format into the other ‚Äî convert_suggestions","text":"suggestions data.table suggestions returned one prediction algorithms e.g. algo_similarity_based_reasoning(). current suggestion_type suggestions passed. suggestion_type suggestions . suggestion_type_options list options generating suggestions. Supported options: - datasets: Pass specific datasets used whenn adding information predictions e.g. use specific version kldb auxco. Supported datasets : \"auxco-1.2.x\", \"kldb-2010\". default datasets bundled package used.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/convert_suggestions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert suggestion from one suggestion format into the other ‚Äî convert_suggestions","text":"data.table suggestions \"\" format","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/create_app_settings.html","id":null,"dir":"Reference","previous_headings":"","what":"Create app_settings. ‚Äî create_app_settings","title":"Create app_settings. ‚Äî create_app_settings","text":"primary convenient way configuring app.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/create_app_settings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create app_settings. ‚Äî create_app_settings","text":"","code":"create_app_settings(   save_to_file,   suggestion_type = \"auxco-1.2.x\",   default_num_suggestions = 5,   require_respondent_id = FALSE,   warn_before_leaving = FALSE,   skip_followup_types = c(),   response_output_dir = file.path(\"output\", \"responses\"),   handle_data = NULL,   get_job_suggestion_params = NULL,   display_page_ids = TRUE,   default_tense = \"present\",   default_extra_instructions = \"on\",   verbose = TRUE,   .validate = TRUE )"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/create_app_settings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create app_settings. ‚Äî create_app_settings","text":"save_to_file responses saved files response_output_dir? Defaults use SAVE_TO_FILE environment variable. recommend setting TRUE. suggestion_type type suggestion use / provide. Possible options \"auxco-1.2.x\" \"kldb-2010\". default_num_suggestions number suggestions generate display users. Accepts positive integers. Defaults 5. require_respondent_id respondent_ids required? Defaults FALSE warn_before_leaving users warned progress lost upon leaving site? Defaults FALSE. skip_followup_types vector strings corresponding question_type followup_question skipped. Allowed ` values: c(\"anforderungsniveau\", \"aufsicht\", \"spezialisierung\", \"sonstige\") response_output_dir Path directory store data app. Defaults ./output/responses/. handle_data Callback function handle data app. setting takes function get's passed 3 parameters: table_name (reference name indicating data save), data (dataframe data save), session (user's current session). get_job_suggestion_params List parameters pass get_job_suggestion. Refer get_job_suggestions() list supported parameters. Note parameter aggregate_score_threshold needs set page_first_freetext() page_second_freetext(). display_page_ids Whether page_ids displayed within questionnaires. default_tense may always want ask current occupation, maybe also previous occupation case pensioners etc. value \"past\". Possible values \"present\" (default), \"past\". setting can overwritten session--session basis URL-Query parameter \"tense\". default_extra_instructions Display additional instructions e.g. interviewer conducting interview. Possible values \"\" (default), \"\". setting can overwritten session--session basis URL-Query parameter \"extra_instructions\". verbose additional output printed running? Defaults TRUE. .validate Whether created app_settings validated. Defaults TRUE.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/create_app_settings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create app_settings. ‚Äî create_app_settings","text":"list app_settings.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/create_app_settings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create app_settings. ‚Äî create_app_settings","text":"","code":"data.table::setDTthreads(1)  app_settings <- create_app_settings(   # Important to save results from the app   save_to_file = TRUE,   require_respondent_id = TRUE )"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/execute_render.html","id":null,"dir":"Reference","previous_headings":"","what":"Called internally by the shiny server. ‚Äî execute_render","title":"Called internally by the shiny server. ‚Äî execute_render","text":"Called internally shiny server.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/execute_render.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Called internally by the shiny server. ‚Äî execute_render","text":"","code":"execute_render(page, session, run_before_output, ...)"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/execute_render.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Called internally by the shiny server. ‚Äî execute_render","text":"session shiny session run_before_output output run_before ... additional arguments passed along","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/execute_run_after.html","id":null,"dir":"Reference","previous_headings":"","what":"Called internally by the shiny server when navigating to the next page. ‚Äî execute_run_after","title":"Called internally by the shiny server when navigating to the next page. ‚Äî execute_run_after","text":"Called internally shiny server navigating next page.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/execute_run_after.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Called internally by the shiny server when navigating to the next page. ‚Äî execute_run_after","text":"","code":"execute_run_after(page, session, input, output, ...)"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/execute_run_after.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Called internally by the shiny server when navigating to the next page. ‚Äî execute_run_after","text":"session shiny session input shiny input ... additional arguments passed along","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/execute_run_before.html","id":null,"dir":"Reference","previous_headings":"","what":"Called internally by the shiny server. ‚Äî execute_run_before","title":"Called internally by the shiny server. ‚Äî execute_run_before","text":"Called internally shiny server.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/execute_run_before.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Called internally by the shiny server. ‚Äî execute_run_before","text":"","code":"execute_run_before(page, session, input, output, ...)"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/execute_run_before.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Called internally by the shiny server. ‚Äî execute_run_before","text":"session shiny session ... additional arguments passed along","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/get_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a standard dataset, while supporting overriding by the user. ‚Äî get_data","title":"Load a standard dataset, while supporting overriding by the user. ‚Äî get_data","text":"Load standard dataset, supporting overriding user.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/get_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a standard dataset, while supporting overriding by the user. ‚Äî get_data","text":"","code":"get_data(dataset_name, user_provided_data = list())"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/get_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a standard dataset, while supporting overriding by the user. ‚Äî get_data","text":"dataset_name Name dataset. Currently supported values \"auxco-1.2.x\", \"kldb-2010\", \"isco-08\" user_provided_data List datasets provided user.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/get_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a standard dataset, while supporting overriding by the user. ‚Äî get_data","text":"requested dataset.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/get_final_codes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the final occupation codes ‚Äî get_final_codes","title":"Get the final occupation codes ‚Äî get_final_codes","text":"final occupation code depend suggestion_id , possibly, followup_answers, depending suggestion_id provided. See occupationMeasurement::auxco$followup_questions list suggestion_ids (=auxco_id) respective recommended follow-questions.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/get_final_codes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the final occupation codes ‚Äî get_final_codes","text":"","code":"get_final_codes(   suggestion_id,   followup_answers = list(),   standardized_answer_levels = NULL,   approximate_standardized_answer_levels = TRUE,   code_type = c(\"isco_08\", \"kldb_10\"),   verbose = TRUE,   suggestion_type = \"auxco-1.2.x\",   suggestion_type_options = list() )"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/get_final_codes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the final occupation codes ‚Äî get_final_codes","text":"suggestion_id Id suggestion followup_answers named list question_ids respective answers followup_questions. Question ids correspond list names, answers correspond list values. standardized_answer_levels named list standardized isco answer levels. Names list correspond type isco standard, values correspond level . Possible standardized answer types : \"isco_skill_level\" \"isco_supervisor_manager\". can used instead followup questions information available already different source. Please note standardized answer levels available question types. list options please take look followup questions included auxco example via occupationMeasurement::auxco$followup_questions. approximate_standardized_answer_levels (default TRUE) Follow questions designed provide answer options conflict suggestion_id. standardized_answer_levels can conflict suggestion_id, exact matches exist. approximation, answer option closest standardized_answer_levels provided, used. code_type type codes returned. Multiple codes can returned time. Supported types codes \"isco_08\" \"kldb_10\". Defaults \"isco_08\" \"kldb_10\". verbose (default TRUE) whether return message , detailing potential issues input provided. suggestion_type suggestion type used. auxco-based suggestion_types supported. suggestion_type_options list options generating suggestions. Supported options: - datasets: Pass specific datasets used whenn adding information predictions e.g. use specific version kldb auxco. Supported datasets : \"auxco-1.2.x\", \"kldb-2010\". default datasets bundled package used.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/get_final_codes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the final occupation codes ‚Äî get_final_codes","text":"named list corresponding code_type(s) specified. Includes message verbose = TRUE","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/get_final_codes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the final occupation codes ‚Äî get_final_codes","text":"interview situation may allow ask follow-questions. default, suboptimal occupation code returned followup_answers missing. followup_answers missing incomplete, one may wish insert/infer missing information using standardized_answer_levels.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/get_final_codes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the final occupation codes ‚Äî get_final_codes","text":"","code":"data.table::setDTthreads(1)  if (FALSE) { get_final_codes(   # F√ºhrungsaufgaben mit Personalverantwortung  bei der Lebensmittelherstellung   \"9076\",   followup_answers = list(     # The first answer option in the first followup question     \"Q9076_1\" = 2   ) )  # The same, but using standardized answer levels get_final_codes(   # F√ºhrungsaufgaben mit Personalverantwortung  bei der Lebensmittelherstellung   \"9076\",   standardized_answer_levels = list(     # A response corresponding to the standard ISCO Level \"supervisor\"     \"isco_supervisor_manager\" = \"isco_supervisor\"   ) )  # Same example with approximate matching, due to conflicting information: # External data suggest the person is not a supervisor, but the person still # says she does supervisory tasks (F√ºhrungsaufgaben, as encoded in \"9076\"). # If approximate_standardized_answer_levels = TRUE (the default), the # selected answer \"9076\" trumps the external data and we will code this # person as a supervisor. get_final_codes(   # F√ºhrungsaufgaben mit Personalverantwortung  bei der Lebensmittelherstellung   \"9076\",   standardized_answer_levels = list(     # A response corresponding to the standard ISCO Level \"not manager nor supervisor\"     \"isco_supervisor_manager\" = \"isco_not_supervising\"   ) ) }"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/get_followup_questions.html","id":null,"dir":"Reference","previous_headings":"","what":"Get potential follow-up questions for a suggestion. ‚Äî get_followup_questions","title":"Get potential follow-up questions for a suggestion. ‚Äî get_followup_questions","text":"Get potential follow-questions suggestion.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/get_followup_questions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get potential follow-up questions for a suggestion. ‚Äî get_followup_questions","text":"","code":"get_followup_questions(   suggestion_id,   tense = \"present\",   suggestion_type = \"auxco-1.2.x\",   suggestion_type_options = list(),   include_answer_codes = FALSE )"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/get_followup_questions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get potential follow-up questions for a suggestion. ‚Äî get_followup_questions","text":"suggestion_id Id suggestion tense tense .e. time use questions & answers, can \"present\" \"past\". Defaults \"present\". suggestion_type suggestion type used. auxco-based suggestion_types supported. suggestion_type_options list options generating suggestions. Supported options: - datasets: Pass specific datasets used whenn adding information predictions e.g. use specific version kldb auxco. Supported datasets : \"auxco-1.2.x\", \"kldb-2010\". default datasets bundled package used. include_answer_codes Whether answer options contain information associated codes. Defaults FALSE. (internal use, use get_final_codes() get codes)","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/get_followup_questions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get potential follow-up questions for a suggestion. ‚Äî get_followup_questions","text":"List followup questions answer options.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/get_followup_questions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get potential follow-up questions for a suggestion. ‚Äî get_followup_questions","text":"","code":"data.table::setDTthreads(1)  if (FALSE) { # Get followup questions for \"Post- und Zustelldienste\" get_followup_questions(\"1004\") }"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/get_item_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve data for an item. ‚Äî get_item_data","title":"Retrieve data for an item. ‚Äî get_item_data","text":"page questionnaire can multiple items .","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/get_item_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve data for an item. ‚Äî get_item_data","text":"","code":"get_item_data(   session,   page_id,   item_id = NULL,   key = c(\"all\", \"question_text\", \"response_text\", \"response_id\"),   default = NULL )"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/get_item_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve data for an item. ‚Äî get_item_data","text":"session shiny session page_id page retrieve data. item_id item retrieve data. different different items page. Since pages contain single question/item, item_id set \"default\" missing. key key retrieve value. (Optional) key provided, items's whole data returned. default default value return key page present questionnaire data.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/get_item_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve data for an item. ‚Äî get_item_data","text":"items's data.","code":""},{"path":[]},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/get_item_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve data for an item. ‚Äî get_item_data","text":"","code":"data.table::setDTthreads(1)  if (FALSE) { # Set up a \"fake\" shiny session to store data session <- shiny::MockShinySession$new() session$userData <- list(   current_page_id = \"other_page\",   questionnaire_data = list(     example_page = list()   ) )  # This code is expected to be run in e.g. run_before or run_after # It doesn't really make sense to run this code outside set_item_data(   session = session,   page_id = \"example_page\",   question_text = \"How are you?\" )  # This code is expected to be run in e.g. run_before get_item_data(   session = session,   page_id = \"example_page\" ) }"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/get_job_suggestions.html","id":null,"dir":"Reference","previous_headings":"","what":"Make coding suggestions based on a user's open-ended text input. ‚Äî get_job_suggestions","title":"Make coding suggestions based on a user's open-ended text input. ‚Äî get_job_suggestions","text":"Given text input, find num_suggestions possible occupation categories.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/get_job_suggestions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make coding suggestions based on a user's open-ended text input. ‚Äî get_job_suggestions","text":"","code":"get_job_suggestions(   text,   suggestion_type = \"auxco-1.2.x\",   num_suggestions = 5,   suggestion_type_options = list(),   aggregate_score_threshold = 0.02,   item_score_threshold = 0,   distinctions = TRUE,   steps = list(simbased_wordwise = list(algorithm = algo_similarity_based_reasoning,     parameters = list(sim_name = \"wordwise\")), simbased_substring = list(algorithm =     algo_similarity_based_reasoning, parameters = list(sim_name = \"substring\"))),   include_general_id = FALSE )"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/get_job_suggestions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make coding suggestions based on a user's open-ended text input. ‚Äî get_job_suggestions","text":"text raw text input user. suggestion_type type suggestion use / provide. Possible options \"auxco-1.2.x\" \"kldb-2010\". num_suggestions maximum number suggestions show. upper bound less suggestions may returned. Defaults 5. suggestion_type_options list options generating suggestions. Supported options: - datasets: Pass specific datasets used whenn adding information predictions e.g. use specific version kldb auxco. Supported datasets : \"auxco-1.2.x\", \"kldb-2010\". default datasets bundled package used. aggregate_score_threshold single value named list thresholds 0 1. list, entry correspond one steps. single value, apply steps. Results step returned sum scores equal greater specified threshold. aggregate_score_threshold 0 results always returned (). item_score_threshold threshold 0 1 (usually small, default 0). Results step returned greater specified threshold. Allows removal highly implausible suggestions. distinctions Whether add additional distinctions similar occupational categories source code. Defaults TRUE. steps list algorithms use parameters. entry list contain nested list two entries: algorithm (algorithm's function ) parameters (parameters pass onto algorithm). algorithm also always access default set three parameters: text_processed: input text preprocessing suggestion_type: type suggestion output num_suggestions: many suggestions shall returned parameters must specified manually provided automatically instead. Defaults :   include_general_id Whether general column, called \"id\" always returned. automatically contain appropriate id different suggestion_types .e. \"auxco-1-2.x\" contain data column \"auxco_id\".","code":"list(   # try similarity \"one word at most 1 letter different\" first   list(     algorithm = algo_similarity_based_reasoning,     parameters = list(       sim_name = \"wordwise\",       min_aggregate_prob = 0.535     )   ),   # since everything else failed, try \"substring\" similarity   list(     algorithm = algo_similarity_based_reasoning,     parameters = list(       sim_name = \"substring\",       min_aggregate_prob = 0.02     )   ) )"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/get_job_suggestions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make coding suggestions based on a user's open-ended text input. ‚Äî get_job_suggestions","text":"data.table suggestions NULL suggestions found.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/get_job_suggestions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make coding suggestions based on a user's open-ended text input. ‚Äî get_job_suggestions","text":"procedure implemented , roughly speaking, follows: Predict categories KldB 2010, including scores. first algorithm mentioned steps used (default: algo_similarity_based_reasoning()). Convert predicted KldB 2010 categories suggestion_type (default: auxco-1.2.x, n:m mapping, scores mapped accordingly.). See internal function convert_suggestions() details. Remove predicted categories score item_score_threshold keep num_suggestions top-ranked suggestions. Start anew, trying next algorithm steps, top-ranked suggestions low chance correct. (Technically, happens summed score num_suggestions top-ranked suggestions aggregate_score_threshold.) suggestion_type == \"auxco-1.2.x\" distinctions == TRUE, insert additional (highly) similar categories replace existing ones. See internal function add_distinctions_auxco(). Reorder keep num_suggestions top-ranked suggestions. Auxco categories added step can identified scores: equals 0.05 categories high similarity 0.005 categories medium similarity.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/get_job_suggestions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make coding suggestions based on a user's open-ended text input. ‚Äî get_job_suggestions","text":"","code":"data.table::setDTthreads(1)  if (FALSE) { if (interactive()) {   get_job_suggestions(\"Koch\") }  if (interactive()) {   get_job_suggestions(\"Schlosser\") } }"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/get_page_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get questionnaire / page data. ‚Äî get_page_data","title":"Get questionnaire / page data. ‚Äî get_page_data","text":"Note page data automatically saved probably want use page$get_item_data instead.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/get_page_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get questionnaire / page data. ‚Äî get_page_data","text":"","code":"get_page_data(session, page_id, key = NULL, default = NULL)"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/get_page_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get questionnaire / page data. ‚Äî get_page_data","text":"session shiny session page_id page retrieve data. Defaults page data function called . key key retrieve value. (Optional) key provided, page's whole data returned. default default value return key page present questionnaire data.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/get_page_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get questionnaire / page data. ‚Äî get_page_data","text":"page data value provided key whole page's data key provided.","code":""},{"path":[]},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/get_responses.html","id":null,"dir":"Reference","previous_headings":"","what":"Convenience function to aggregate all saved results_overview files. ‚Äî get_responses","title":"Convenience function to aggregate all saved results_overview files. ‚Äî get_responses","text":"Expects data saved files.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/get_responses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convenience function to aggregate all saved results_overview files. ‚Äî get_responses","text":"","code":"get_responses(app_settings = create_app_settings(save_to_file = TRUE))"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/get_responses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convenience function to aggregate all saved results_overview files. ‚Äî get_responses","text":"app_settings app_settings configuration, used app().","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/get_responses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convenience function to aggregate all saved results_overview files. ‚Äî get_responses","text":"combined data.table user data (based results_overview) NULL files.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/get_responses.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convenience function to aggregate all saved results_overview files. ‚Äî get_responses","text":"","code":"data.table::setDTthreads(1)  if (FALSE) { app_settings <- create_app_settings(save_to_file = TRUE) if (interactive()) {   get_responses(app_settings = app_settings) } }"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/get_suggestion_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Get additional information for a suggestion id. ‚Äî get_suggestion_info","title":"Get additional information for a suggestion id. ‚Äî get_suggestion_info","text":"includes descriptive title, job descriptions etc. retrieve information regarding followup questions use get_followup_questions.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/get_suggestion_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get additional information for a suggestion id. ‚Äî get_suggestion_info","text":"","code":"get_suggestion_info(   suggestion_ids,   suggestion_type = \"auxco-1.2.x\",   suggestion_type_options = list(),   include_default_codes = FALSE )"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/get_suggestion_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get additional information for a suggestion id. ‚Äî get_suggestion_info","text":"suggestion_ids Suggestion id(s) retrieve information . typically character vector. suggestion_type suggestion type used. auxco-based suggestion_types supported. suggestion_type_options list options generating suggestions. Supported options: - datasets: Pass specific datasets used whenn adding information predictions e.g. use specific version kldb auxco. Supported datasets : \"auxco-1.2.x\", \"kldb-2010\". default datasets bundled package used. include_default_codes Whether default id encodings returned rest infromation e.g. KldB-IDs. Defaults FALSE. (internal use, use get_final_codes() get codes)","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/get_suggestion_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get additional information for a suggestion id. ‚Äî get_suggestion_info","text":"Data table information suggestion.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/get_suggestion_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get additional information for a suggestion id. ‚Äî get_suggestion_info","text":"","code":"data.table::setDTthreads(1)  if (FALSE) { get_suggestion_info(\"9079\") }"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/isco_08_en.html","id":null,"dir":"Reference","previous_headings":"","what":"Categories of the The International Standard Classification of Occupations - ISCO-08 ‚Äî isco_08_en","title":"Categories of the The International Standard Classification of Occupations - ISCO-08 ‚Äî isco_08_en","text":"Categories International Standard Classification Occupations - ISCO-08. ISCO-08 hierarchical classification, consisting 10 (1-digit) major groups, 43 (2-digit) sub-major groups, 130 (3-digit) minor groups, 436 (4-digit) unit groups, included data set.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/isco_08_en.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Categories of the The International Standard Classification of Occupations - ISCO-08 ‚Äî isco_08_en","text":"","code":"isco_08_en"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/isco_08_en.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Categories of the The International Standard Classification of Occupations - ISCO-08 ‚Äî isco_08_en","text":"data frame 619 rows 3 variables: code character. Unique ISCO-08 identifier / code. label character. Short label / title category. description character. Detailed description category.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/isco_08_en.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Categories of the The International Standard Classification of Occupations - ISCO-08 ‚Äî isco_08_en","text":"Source: https://esco.ec.europa.eu service uses ESCO classification European Commission. descriptions used taken ESCO classification (v1.1, Occupations pillar) European Commission, based ISCO-08. information ISCO-08: https://isco-ilo.netlify.app/en/isco-08/, https://www.ilo.org/public/english/bureau/stat/isco/isco08/","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/leaving_page_backwards.html","id":null,"dir":"Reference","previous_headings":"","what":"Called internally by the shiny server when navigating to the previous page. ‚Äî leaving_page_backwards","title":"Called internally by the shiny server when navigating to the previous page. ‚Äî leaving_page_backwards","text":"Called internally shiny server navigating previous page.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/leaving_page_backwards.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Called internally by the shiny server when navigating to the previous page. ‚Äî leaving_page_backwards","text":"","code":"leaving_page_backwards(page, session, input, output, ...)"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/leaving_page_backwards.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Called internally by the shiny server when navigating to the previous page. ‚Äî leaving_page_backwards","text":"session shiny session input shiny input ... additional arguments passed along","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/load_auxco.html","id":null,"dir":"Reference","previous_headings":"","what":"Load AuxCO from a directory of CSV files ‚Äî load_auxco","title":"Load AuxCO from a directory of CSV files ‚Äî load_auxco","text":"function loads Auxiliary Classification Occupations (AuxCO) reading CSVs specified directory, loading e.g. ids correct format. Data loaded named list matching format expected functions package.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/load_auxco.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load AuxCO from a directory of CSV files ‚Äî load_auxco","text":"","code":"load_auxco(dir, add_explanations = TRUE)"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/load_auxco.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load AuxCO from a directory of CSV files ‚Äî load_auxco","text":"dir path directory holds CSVs. add_explanations Whether explanations added harder understand task descriptions. Defaults TRUE.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/load_auxco.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load AuxCO from a directory of CSV files ‚Äî load_auxco","text":"list multiple data.tables.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/load_auxco.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load AuxCO from a directory of CSV files ‚Äî load_auxco","text":"package also includes already loaded version auxco, can used straight away without calling function.","code":""},{"path":[]},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/load_auxco.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load AuxCO from a directory of CSV files ‚Äî load_auxco","text":"","code":"data.table::setDTthreads(1)  if (FALSE) { # This function expects the CSV files from # https://github.com/occupationMeasurement/auxiliary-classification/releases/ # to be there. path_to_auxco <- \"auxco\" if (dir.exists(path_to_auxco)) {   load_auxco(path_to_auxco) } }"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/load_kldb.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean & Load KldB 2010 dataset. ‚Äî load_kldb_raw","title":"Clean & Load KldB 2010 dataset. ‚Äî load_kldb_raw","text":"Use load_kldb_raw() load whole dataset.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/load_kldb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean & Load KldB 2010 dataset. ‚Äî load_kldb_raw","text":"","code":"load_kldb_raw(   cache_dir = getOption(\"occupationMeasurement.cache_dir\", tempdir()) )  load_kldb(cache_dir = getOption(\"occupationMeasurement.cache_dir\", tempdir()))"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/load_kldb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean & Load KldB 2010 dataset. ‚Äî load_kldb_raw","text":"cache_dir path directory downloaded data stored. recommend setting \"cache\" store data working directory. prevent reloading data time time . can set globally via options(occupationMeasurement.cache_dir = \"cache\").","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/load_kldb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean & Load KldB 2010 dataset. ‚Äî load_kldb_raw","text":"cleaned / slimmed version KldB 2010.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/load_kldb.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Clean & Load KldB 2010 dataset. ‚Äî load_kldb_raw","text":"Source: https://www.klassifikationsserver.de/klassService/index.jsp?variant=kldb2010 information KldB 2010: https://statistik.arbeitsagentur.de/DE/Navigation/Grundlagen/Klassifikationen/Klassifikation-der-Berufe/KldB2010-Fassung2020/KldB2010-Fassung2020-Nav.html KldB 2010 revised 2020. changes implemented yet.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/load_kldb.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Clean & Load KldB 2010 dataset. ‚Äî load_kldb_raw","text":"load_kldb_raw(): Load raw KldB 2010 dataset.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/load_kldb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean & Load KldB 2010 dataset. ‚Äî load_kldb_raw","text":"","code":"data.table::setDTthreads(1)  if (FALSE) { # We recommend using a non-temporary directory for caching, so data is # downloaded only once and not time and time again cache_dir <- tempdir() # Note: The dataset will be downloaded from the internet # Load the cleaned dataset load_kldb(cache_dir = cache_dir) # Load the raw dataset load_kldb_raw(cache_dir = cache_dir) }"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/new_page.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new questionnaire page. ‚Äî new_page","title":"Create a new questionnaire page. ‚Äî new_page","text":"page corresponds page within app/questionnaire.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/new_page.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new questionnaire page. ‚Äî new_page","text":"","code":"new_page(   page_id,   render,   condition = NULL,   run_before = NULL,   render_before = NULL,   render_after = NULL,   run_after = NULL )"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/new_page.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new questionnaire page. ‚Äî new_page","text":"page_id unique string identifiying page. (Required) used store data. render Function render page. (Required) expected, function returns list shiny tags. output combined render_before render_after. function access shiny session run_before_output. condition Function check whether page shown. function returns TRUE, page shown upon navigating , returns FALSE skipped. Defaults show page. function access shiny session. run_before Function prepares data render page. Called immediately condition (condition returned TRUE). Whatever run_before returns available render, render_before render_after run_before_output. function access shiny session. render_before Called exactly like render. Output added just output render. Mainly used add additional outputs existing pages. render_after Called exactly like render. Output added just output render. Mainly used add additional outputs existing pages. run_after Function handles user input leave page. function access shiny session shiny input.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/new_page.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new questionnaire page. ‚Äî new_page","text":"new page object.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/new_page.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a new questionnaire page. ‚Äî new_page","text":"Pages rendered calling different life-cycle functions one another. order called follows: condition (session) evaluated TRUE, continue. run_before (session) render_before (session, run_before_output, input, output) render (session, run_before_output, input, output) render_after (session, run_before_output, input, output) outputs render_before, render & render_after stitched together produce final HTML output page. run_after (session, input, output) Run user leaves page (=clicks next button). user input handled . question asked, one typically call set_item_data() save collected data internally. life-cycle functions annotated paramaters access . session, input output passed directly shiny correspond objects made available shiny::shinyServer(), run_before_output available convenience corresponds whatever returned run_before. side-effects occur: occupationMeasurement:::init_page_data called 1. run_before. sets internal representation page data saved. occupationMeasurement:::finalize_data called 6. run_before. occupationMeasurement:::save_page_data called 6. run_before. saves responses hard drive, .e. appends responses page table_name == \"answers\". See vignette create_app_settings() details. Use render_before, render_after discouraged necessary, two life-cycle functions added allow easier modification extension existing pages.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/new_page.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new questionnaire page. ‚Äî new_page","text":"","code":"data.table::setDTthreads(1)  if (FALSE) { very_simple_page <- new_page(   page_id = \"example\",   render = function(session, run_before_output, input, output, ...) {     list(       shiny::tags$h1(\"My test page\"),       button_previous(),       button_next()     )   } )  # Example where we also save some data page_that_saves_two_items <- new_page(   page_id = \"questions_1_and_2\",   render = function(session, run_before_output, page, input, output, ...) {     list(       shiny::tags$h1(\"Questions\"),       shiny::textAreaInput(         inputId = \"day_freetext\",         label = \"How was your day? Please give a detailed answer.\",         value = get_item_data(           session = session, page_id = page$page_id,           item_id = \"day_freetext\",           key = \"response_text\"         )       ),       shiny::tags$p(\"How would you rate your day? On a scale of 1 - 4\"),       radioButtons(         inputId = \"day_radio\",         label = NULL,         width = \"100%\",         choices = list(One = 1, Two = 2, Three = 3, Four = 4),         selected = get_item_data(           session = session,           page_id = page$page_id,           item_id = \"day_radio\",           key = \"response_id\",           default = character(0)         )       ),       button_previous(),       button_next()     )   },   run_after = function(session, page, input, ...) {     set_item_data(       session = session,       page_id = page$page_id,       item_id = \"day_freetext\",       response_text = input$day_freetext     )     set_item_data(       session = session,       page_id = page$page_id,       item_id = \"day_radio\",       response_id = input$day_radio     )   } )  questionnaire_that_saves_two_items <- list(   page_that_saves_two_items,   # So we have a next page to go to   very_simple_page )  if (interactive()) {   app(questionnaire = questionnaire_that_saves_two_items) } }"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_choose_one_option.html","id":null,"dir":"Reference","previous_headings":"","what":"Show a page with multiple radio button options where once can be picked. ‚Äî page_choose_one_option","title":"Show a page with multiple radio button options where once can be picked. ‚Äî page_choose_one_option","text":"Show page multiple radio button options can picked.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_choose_one_option.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show a page with multiple radio button options where once can be picked. ‚Äî page_choose_one_option","text":"","code":"page_choose_one_option(   page_id,   question_text = \"Please pick one of the following options\",   list_of_choices = list(One = 1, Two = 2, Three = 3),   choice_labels = NULL,   next_button = TRUE,   previous_button = TRUE,   run_before = NULL,   run_after = NULL,   ... )"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_choose_one_option.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show a page with multiple radio button options where once can be picked. ‚Äî page_choose_one_option","text":"page_id unique string identifiying page. Used store data. question_text question / text display. can either string, simply displayed function dynamically determine question_text. list_of_choices list answering options. can either just simple list values named list names corresponding user sees values corresponding actually saved values. e.g. list(One = 1, Two = 2, Three = 3) people see One, Two, ... numbers 1, 2, ... saved response_id. want use complex choice names jsut strings (.e. HTML), can also use choice_labels option . choice_labels List vector choice names shown. matched equal-length vector list_of_choices. next_button Whether show button navigate next page? Defaults TRUE. previous_button Whether show button navigate preivous page? Defaults TRUE. run_before Similar run_before new_page(), passed explicitly page adds code run_before. run_after Similar run_after new_page(), passed explicitly page adds code run_after. ... parametrs passed new_page()","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_choose_one_option.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show a page with multiple radio button options where once can be picked. ‚Äî page_choose_one_option","text":"page object.","code":""},{"path":[]},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_choose_one_option.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show a page with multiple radio button options where once can be picked. ‚Äî page_choose_one_option","text":"","code":"data.table::setDTthreads(1)  if (FALSE) { one_page_questionnaire <- list(   page_choose_one_option(     \"test_page_radio\",     question_text = \"Hello there! Please pick your favorite number from the options below:\",     list_of_choices = list(One = 1, Two = 2, Three = 3)   ),   page_final() ) if (interactive()) {   app(questionnaire = one_page_questionnaire) } }"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_feedback.html","id":null,"dir":"Reference","previous_headings":"","what":"Page to receive feedback on how well the chosen suggestion fits ‚Äî page_feedback","title":"Page to receive feedback on how well the chosen suggestion fits ‚Äî page_feedback","text":"Page receive feedback well chosen suggestion fits","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_feedback.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Page to receive feedback on how well the chosen suggestion fits ‚Äî page_feedback","text":"","code":"page_feedback(is_interview = FALSE, ...)"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_feedback.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Page to receive feedback on how well the chosen suggestion fits ‚Äî page_feedback","text":"is_interview page show slightly different / additional instructions answer options interview conducted another person? Defaults FALSE. ... additional parameters passed first passed page_choose_one_option() new_page().","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_feedback.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Page to receive feedback on how well the chosen suggestion fits ‚Äî page_feedback","text":"page object.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_feedback.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Page to receive feedback on how well the chosen suggestion fits ‚Äî page_feedback","text":"","code":"data.table::setDTthreads(1)  if (FALSE) { my_questionnaire <- list(   page_first_freetext(),   page_select_suggestion(),   page_feedback() ) if (interactive()) {   app(questionnaire = my_questionnaire) } }"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_final.html","id":null,"dir":"Reference","previous_headings":"","what":"A final page, showing instructions to close the window. ‚Äî page_final","title":"A final page, showing instructions to close the window. ‚Äî page_final","text":"page saves data results_overview marks questionnaire complete.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_final.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A final page, showing instructions to close the window. ‚Äî page_final","text":"","code":"page_final(...)"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_final.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A final page, showing instructions to close the window. ‚Äî page_final","text":"... additional parameters passed new_page()","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_final.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A final page, showing instructions to close the window. ‚Äî page_final","text":"page object.","code":""},{"path":[]},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_final.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A final page, showing instructions to close the window. ‚Äî page_final","text":"","code":"data.table::setDTthreads(1)  if (FALSE) { my_questionnaire <- list(   page_final() ) if (interactive()) {   app(questionnaire = my_questionnaire) } }"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_first_freetext.html","id":null,"dir":"Reference","previous_headings":"","what":"The first freetext question to show. ‚Äî page_first_freetext","title":"The first freetext question to show. ‚Äî page_first_freetext","text":", description job can entered open freetext field suggestions generated based input.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_first_freetext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The first freetext question to show. ‚Äî page_first_freetext","text":"","code":"page_first_freetext(   is_interview = FALSE,   aggregate_score_threshold = 0.535,   ... )"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_first_freetext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The first freetext question to show. ‚Äî page_first_freetext","text":"is_interview page show slightly different / additional instructions answer options interview conducted another person? Defaults FALSE. aggregate_score_threshold total sum scores suggestions higher threshold suggestions shown. parameter passed get_job_suggestions(). ... additional parameters passed new_page()","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_first_freetext.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The first freetext question to show. ‚Äî page_first_freetext","text":"page object.","code":""},{"path":[]},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_first_freetext.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The first freetext question to show. ‚Äî page_first_freetext","text":"","code":"data.table::setDTthreads(1)  if (FALSE) { my_questionnaire <- list(   page_first_freetext(),   page_second_freetext(),   page_select_suggestion(),   page_none_selected_freetext(),   page_followup(1),   page_followup(2) ) if (interactive()) {   app(questionnaire = my_questionnaire) } }"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_followup.html","id":null,"dir":"Reference","previous_headings":"","what":"Show potential followup questions to the user. ‚Äî page_followup","title":"Show potential followup questions to the user. ‚Äî page_followup","text":"disambiguate similar occupations. Depending suggestion, multiple followup questions can shown.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_followup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show potential followup questions to the user. ‚Äî page_followup","text":"","code":"page_followup(index, is_interview = FALSE, ...)"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_followup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show potential followup questions to the user. ‚Äî page_followup","text":"index index followup question (1-based). show first followup question () use page_followup(index = 1), show potential second followup question use page_followup(index = 2). example questionnaire_web_survey() uses ..., page_followup(index = 1), page_followup(index = 2), ... is_interview page show slightly different / additional instructions answer options interview conducted another person? Defaults FALSE. ... additional parameters passed new_page()","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_followup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show potential followup questions to the user. ‚Äî page_followup","text":"page object.","code":""},{"path":[]},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_followup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show potential followup questions to the user. ‚Äî page_followup","text":"","code":"data.table::setDTthreads(1)  if (FALSE) { my_questionnaire <- list(   page_first_freetext(),   page_second_freetext(),   page_select_suggestion(),   page_none_selected_freetext(),   page_followup(1),   page_followup(2) ) if (interactive()) {   app(questionnaire = my_questionnaire) } }"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_freetext.html","id":null,"dir":"Reference","previous_headings":"","what":"Show a page with a text field where free text can be entered. ‚Äî page_freetext","title":"Show a page with a text field where free text can be entered. ‚Äî page_freetext","text":"Show page text field free text can entered.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_freetext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show a page with a text field where free text can be entered. ‚Äî page_freetext","text":"","code":"page_freetext(   page_id,   question_text = \"Please enter your answer in the box below\",   is_interview = FALSE,   no_answer_checkbox = TRUE,   next_button = TRUE,   previous_button = TRUE,   trigger_next_on_enter = TRUE,   render_question_text = TRUE,   run_before = NULL,   run_after = NULL,   ... )"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_freetext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show a page with a text field where free text can be entered. ‚Äî page_freetext","text":"page_id unique string identifiying page. Used store data. question_text question / text display. can either string, simply displayed function dynamically determine question_text. is_interview page show slightly different / additional instructions answer options interview conducted another person? Defaults FALSE. no_answer_checkbox Whether provide checkbox denote answer provided. next_button Whether show button navigate next page? Defaults TRUE. previous_button Whether show button navigate preivous page? Defaults TRUE. trigger_next_on_enter Whether next button triggered one presses enter. Defaults TRUE. known issues IE11. render_question_text Whether question text displayed? set FALSE, wish change rendering question_text e.g. using render_before. Defaults TRUE. run_before Similar run_before new_page(), passed explicitly page adds code run_before. run_after Similar run_after new_page(), passed explicitly page adds code run_after. ... parametrs passed new_page()","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_freetext.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show a page with a text field where free text can be entered. ‚Äî page_freetext","text":"page object.","code":""},{"path":[]},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_freetext.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show a page with a text field where free text can be entered. ‚Äî page_freetext","text":"","code":"data.table::setDTthreads(1)  if (FALSE) { page_freetext(   \"test_page_freetext\",   question_text = \"Hello there! Please fill in your name below:\",   no_answer_checkbox = TRUE ) }"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_none_selected_freetext.html","id":null,"dir":"Reference","previous_headings":"","what":"An additional freetext page to show when no suggestion has been selected. ‚Äî page_none_selected_freetext","title":"An additional freetext page to show when no suggestion has been selected. ‚Äî page_none_selected_freetext","text":"additional freetext page show suggestion selected.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_none_selected_freetext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An additional freetext page to show when no suggestion has been selected. ‚Äî page_none_selected_freetext","text":"","code":"page_none_selected_freetext(is_interview = FALSE, ...)"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_none_selected_freetext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"An additional freetext page to show when no suggestion has been selected. ‚Äî page_none_selected_freetext","text":"is_interview page show slightly different / additional instructions answer options interview conducted another person? Defaults FALSE. ... additional parameters passed new_page()","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_none_selected_freetext.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"An additional freetext page to show when no suggestion has been selected. ‚Äî page_none_selected_freetext","text":"page object.","code":""},{"path":[]},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_none_selected_freetext.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"An additional freetext page to show when no suggestion has been selected. ‚Äî page_none_selected_freetext","text":"","code":"data.table::setDTthreads(1)  if (FALSE) { my_questionnaire <- list(   page_first_freetext(),   page_second_freetext(),   page_select_suggestion(),   page_none_selected_freetext(),   page_followup(1),   page_followup(2) ) if (interactive()) {   app(questionnaire = my_questionnaire) } }"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Page showing the user's results ‚Äî page_results","title":"Page showing the user's results ‚Äî page_results","text":"page meant demonstration purposes. Users can see entered code saved. page included questionnaire_demo(), questionnaire templates.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Page showing the user's results ‚Äî page_results","text":"","code":"page_results(...)"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Page showing the user's results ‚Äî page_results","text":"... additional parameters passed new_page()","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Page showing the user's results ‚Äî page_results","text":"page object.","code":""},{"path":[]},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Page showing the user's results ‚Äî page_results","text":"","code":"data.table::setDTthreads(1)  if (FALSE) { my_questionnaire <- list(   page_first_freetext(),   page_second_freetext(),   page_select_suggestion(),   page_none_selected_freetext(),   page_followup(1),   page_followup(2),   page_results() ) if (interactive()) {   app(questionnaire = my_questionnaire) } }"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_second_freetext.html","id":null,"dir":"Reference","previous_headings":"","what":"An optional, second free text question if the first didn't yield suggestions. ‚Äî page_second_freetext","title":"An optional, second free text question if the first didn't yield suggestions. ‚Äî page_second_freetext","text":"first freetext question provide satisfactory results, ask details try .","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_second_freetext.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An optional, second free text question if the first didn't yield suggestions. ‚Äî page_second_freetext","text":"","code":"page_second_freetext(   combine_input_with_first = TRUE,   is_interview = FALSE,   aggregate_score_threshold = 0.02,   ... )"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_second_freetext.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"An optional, second free text question if the first didn't yield suggestions. ‚Äî page_second_freetext","text":"combine_input_with_first input combined previous question? is_interview page show slightly different / additional instructions answer options interview conducted another person? Defaults FALSE. aggregate_score_threshold total sum scores suggestions higher threshold suggestions shown. parameter passed get_job_suggestions(). ... additional parameters passed new_page()","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_second_freetext.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"An optional, second free text question if the first didn't yield suggestions. ‚Äî page_second_freetext","text":"page object.","code":""},{"path":[]},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_second_freetext.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"An optional, second free text question if the first didn't yield suggestions. ‚Äî page_second_freetext","text":"","code":"data.table::setDTthreads(1)  if (FALSE) { my_questionnaire <- list(   page_first_freetext(),   page_second_freetext(),   page_select_suggestion(),   page_none_selected_freetext(),   page_followup(1),   page_followup(2) ) if (interactive()) {   app(questionnaire = my_questionnaire) } }"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_select_suggestion.html","id":null,"dir":"Reference","previous_headings":"","what":"Display the generated suggestions for the user to pick one. ‚Äî page_select_suggestion","title":"Display the generated suggestions for the user to pick one. ‚Äî page_select_suggestion","text":"Display generated suggestions user pick one.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_select_suggestion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display the generated suggestions for the user to pick one. ‚Äî page_select_suggestion","text":"","code":"page_select_suggestion(is_interview = FALSE, ...)"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_select_suggestion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display the generated suggestions for the user to pick one. ‚Äî page_select_suggestion","text":"is_interview page show slightly different / additional instructions answer options interview conducted another person? Defaults FALSE. ... additional parameters passed new_page()","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_select_suggestion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display the generated suggestions for the user to pick one. ‚Äî page_select_suggestion","text":"page object.","code":""},{"path":[]},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_select_suggestion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display the generated suggestions for the user to pick one. ‚Äî page_select_suggestion","text":"","code":"data.table::setDTthreads(1)  if (FALSE) { my_questionnaire <- list(   page_first_freetext(),   page_second_freetext(),   page_select_suggestion(),   page_none_selected_freetext(),   page_followup(1),   page_followup(2) ) if (interactive()) {   app(questionnaire = my_questionnaire) } }"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_welcome.html","id":null,"dir":"Reference","previous_headings":"","what":"Welcome Page (optional) ‚Äî page_welcome","title":"Welcome Page (optional) ‚Äî page_welcome","text":"Providing introduction greeting participants.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_welcome.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Welcome Page (optional) ‚Äî page_welcome","text":"","code":"page_welcome(   title = \"Herzlich Willkommen zum Modul zur automatischen Berufskodierung!\",   ... )"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_welcome.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Welcome Page (optional) ‚Äî page_welcome","text":"title heading greet participants. ... additional parameters passed new_page()","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_welcome.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Welcome Page (optional) ‚Äî page_welcome","text":"page object.","code":""},{"path":[]},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/page_welcome.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Welcome Page (optional) ‚Äî page_welcome","text":"","code":"data.table::setDTthreads(1)  if (FALSE) { my_questionnaire <- list(page_welcome) if (interactive()) {   app(questionnaire = my_questionnaire) } }"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/preprocess_string.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess a string, removing special characters and handling abbreviations. ‚Äî preprocess_string","title":"Preprocess a string, removing special characters and handling abbreviations. ‚Äî preprocess_string","text":"Replace common characters / character sequences (e.g., √Ñ, √ú, \"DIPL.-ING.\") uppercase equivalents removes punctuation, empty spaces word \"Diplom\".","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/preprocess_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess a string, removing special characters and handling abbreviations. ‚Äî preprocess_string","text":"","code":"preprocess_string(verbatim, lang = \"de\")"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/preprocess_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess a string, removing special characters and handling abbreviations. ‚Äî preprocess_string","text":"verbatim character vector process. lang language text . Currently German supported. Defaults \"de\" (German).","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/preprocess_string.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess a string, removing special characters and handling abbreviations. ‚Äî preprocess_string","text":"character vector processing","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/preprocess_string.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Preprocess a string, removing special characters and handling abbreviations. ‚Äî preprocess_string","text":"charToRaw() helps find UTF-8 characters.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/preprocess_string.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preprocess a string, removing special characters and handling abbreviations. ‚Äî preprocess_string","text":"","code":"data.table::setDTthreads(1)  if (FALSE) { preprocess_string(c(   \"Verkauf von B\\u00fcchern, Schreibwaren\",   \"Fach\\u00e4rztin f\\u00fcr Kinder- und Jugendmedizin im \\u00f6ffentlichen Gesundheitswesen\",   \"Industriemechaniker\",   \"Dipl.-Ing. - Agrarwirtschaft (Landwirtschaft)\" )) }"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/pretrained_models.html","id":null,"dir":"Reference","previous_headings":"","what":"Pretrained ML models to be used with the package. ‚Äî pretrained_models","title":"Pretrained ML models to be used with the package. ‚Äî pretrained_models","text":"Pretrained ML models used package.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/pretrained_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pretrained ML models to be used with the package. ‚Äî pretrained_models","text":"","code":"pretrained_models"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/pretrained_models.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Pretrained ML models to be used with the package. ‚Äî pretrained_models","text":"nested list pretrained machine learning models: similarity_based_reasoning list. Contains pretrained models used algo_similarity_based_reasoning(). similarity_based_reasoning$wordwise list. Contains pretrained model used providing suggestions using full wordwise matching. similarity_based_reasoning$substring list. Contains pretrained model used providing suggestions using substring matching. training data always predicts 5-digit code 2010 German Classification Occupations, exceptions: -0004 stands 'precise enough/uncodable', -0006 stands 'Multiple Jobs', -0012 stands 'Blue-collar workers', -0019 stands 'Volunteer/Social Service', -0030 stands 'Student assistant'.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/pretrained_models.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Pretrained ML models to be used with the package. ‚Äî pretrained_models","text":"Data following surveys pooled: Antoni, M., Drasch, K., Kleinert, C., Matthes, B., Ruland, M. Trahms, . (2010): Arbeiten und Lernen im Wandel * Teil 1: √úberblick √ºber die Studie, FDZ-Methodenreport 05/2010, Forschungsdatenzentrum der Bundesagentur f√ºr Arbeit im Institut f√ºr Arbeitsmarkt- und Berufsforschung, Nuremberg. Rohrbach-Schmidt, D., Hall, . (2013): BIBB/BAuA Employment Survey 2012, BIBB-FDZ Data Methodological Reports Nr. 1/2013. Version 4.1, Federal Institute Vocational Education Training (Research Data Centre), Bonn. Lange, C., Finger, J., Allen, J., Born, S., Hoebel, J., Kuhnert, R., M√ºters, S., Thelen, J., Schmich, P., Varga, M., von der Lippe, E., Wetzstein, M., Ziese, T. (2017): Implementation European Health Interview Survey (EHIS) German Health Update (GEDA), Archives Public Health, 75, 1‚Äì14. Hoffmann, R., Lange, M., Butschalowsky, H., Houben, R., Schmich, P., Allen, J., Kuhnert, R., Schaffrath Rosario, ., G√∂√üwald, . (2018): KiGGS Wave 2 Cross-Sectional Study‚ÄîParticipant Acquisition, Response Rates Representativeness, Journal Health Monitoring, 3, 78‚Äì91. (wave 2) Trappmann, M., Beste, J., Bethmann, ., M√ºller, G. (2013): PASS Panel Survey Six Waves, Journal Labour Market Research, 46, 275‚Äì281. (wave 10) Job titles taken following publication: Bundesagentur f√ºr Arbeit (2019). Gesamtberufsliste der Bundesagentur f√ºr Arbeit. Stand: 03.01.2019. https://download-portal.arbeitsagentur.de/files/. Basically, leaving data anonymization steps aside, count job title Gesamtberufsliste (additional titles/texts) many responses surveys similar job title, separately coded category. Similarity calculated two ways, implying obtain two different counts: SubstringSimilarity refers situations job title Gesamtberufsliste substring verbal answer; WordwiseSimilarity refers situations word verbal answer identical job title Gesamtberufsliste, except one character word allowed change (Levenshtein distance). counts available two separate files data-raw/training-data/ directory package. algorithm create counts available inside R-package https://github.com/malsch/occupationCoding, along documentation. train_similarity_based_reasoning() used train ML models. See data-raw/pretrained_models.R raw counts details.","code":""},{"path":[]},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/questionnaire_demo.html","id":null,"dir":"Reference","previous_headings":"","what":"A demo questionnaire with additional explanations ‚Äî questionnaire_demo","title":"A demo questionnaire with additional explanations ‚Äî questionnaire_demo","text":"View function's code see used pages.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/questionnaire_demo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A demo questionnaire with additional explanations ‚Äî questionnaire_demo","text":"","code":"questionnaire_demo(show_feedback_page = TRUE)"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/questionnaire_demo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A demo questionnaire with additional explanations ‚Äî questionnaire_demo","text":"show_feedback_page Show page_feedback() evaluate fit chosen suggestion.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/questionnaire_demo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A demo questionnaire with additional explanations ‚Äî questionnaire_demo","text":"questionnaire app() .e. list pages.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/questionnaire_demo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A demo questionnaire with additional explanations ‚Äî questionnaire_demo","text":"Note, function complex code create additional pages.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/questionnaire_demo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A demo questionnaire with additional explanations ‚Äî questionnaire_demo","text":"","code":"data.table::setDTthreads(1)  if (FALSE) { # Inspect the code to create the questionnaire_demo print(questionnaire_demo)  if (interactive()) {   # Run the app with the questionnaire_demo   app(questionnaire = questionnaire_demo()) } }"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/questionnaire_interviewer_administered.html","id":null,"dir":"Reference","previous_headings":"","what":"A questionnaire for interviewer-administered surveys ‚Äî questionnaire_interviewer_administered","title":"A questionnaire for interviewer-administered surveys ‚Äî questionnaire_interviewer_administered","text":"questionnaire Computer-assisted Interviewing (CAI), .e. telephone interviewing personal interviewing. modes, interviewer asks questions interviewee.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/questionnaire_interviewer_administered.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A questionnaire for interviewer-administered surveys ‚Äî questionnaire_interviewer_administered","text":"","code":"questionnaire_interviewer_administered(show_feedback_page = TRUE)"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/questionnaire_interviewer_administered.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A questionnaire for interviewer-administered surveys ‚Äî questionnaire_interviewer_administered","text":"show_feedback_page Show page_feedback() evaluate fit chosen suggestion.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/questionnaire_interviewer_administered.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A questionnaire for interviewer-administered surveys ‚Äî questionnaire_interviewer_administered","text":"questionnaire app() .e. list pages.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/questionnaire_interviewer_administered.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A questionnaire for interviewer-administered surveys ‚Äî questionnaire_interviewer_administered","text":"View function's code see used pages. function meant template can changed meet requirements.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/questionnaire_interviewer_administered.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A questionnaire for interviewer-administered surveys ‚Äî questionnaire_interviewer_administered","text":"","code":"data.table::setDTthreads(1)  if (FALSE) { # Inspect the code to create the questionnaire_interviewer_administered print(questionnaire_interviewer_administered)  if (interactive()) {   # Run the app with the questionnaire_interviewer_administered   app(questionnaire = questionnaire_interviewer_administered()) } }"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/questionnaire_web_survey.html","id":null,"dir":"Reference","previous_headings":"","what":"A web survey which participants can navigate themselves. ‚Äî questionnaire_web_survey","title":"A web survey which participants can navigate themselves. ‚Äî questionnaire_web_survey","text":"basic default questionnaire. View function's code see used pages. function meant template can changed meet requirements.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/questionnaire_web_survey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A web survey which participants can navigate themselves. ‚Äî questionnaire_web_survey","text":"","code":"questionnaire_web_survey(show_feedback_page = TRUE)"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/questionnaire_web_survey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A web survey which participants can navigate themselves. ‚Äî questionnaire_web_survey","text":"show_feedback_page Show page_feedback() evaluate fit chosen suggestion.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/questionnaire_web_survey.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A web survey which participants can navigate themselves. ‚Äî questionnaire_web_survey","text":"questionnaire app(), .e. list pages.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/questionnaire_web_survey.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A web survey which participants can navigate themselves. ‚Äî questionnaire_web_survey","text":"","code":"data.table::setDTthreads(1)  if (FALSE) { # Inspect the code to create the questionnaire_web_survey print(questionnaire_web_survey)  if (interactive()) {   # Run the app with the questionnaire_web_survey   app(questionnaire = questionnaire_web_survey()) }  if (interactive()) {   # This is used by default within app   app() } }"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/set_item_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Set / save data for an item. ‚Äî set_item_data","title":"Set / save data for an item. ‚Äî set_item_data","text":"can multiple items given page. Items can different questions, multiple variables need saved single question. question_text typically saved run_before reply (response_text /response_id) typically saved run_after.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/set_item_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set / save data for an item. ‚Äî set_item_data","text":"","code":"set_item_data(   session,   page_id,   item_id = NULL,   question_text = NULL,   response_text = NULL,   response_id = NULL )"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/set_item_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set / save data for an item. ‚Äî set_item_data","text":"session shiny session page_id page retrieve data. item_id item set/update data. different different items page. Since pages contain single question/item, item_id set \"default\" missing. question_text question's text. (optional) response_text user's response text form. (optional) response_id user's response id set choices. (optional)","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/set_item_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set / save data for an item. ‚Äî set_item_data","text":"nothing","code":""},{"path":[]},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/set_item_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set / save data for an item. ‚Äî set_item_data","text":"","code":"data.table::setDTthreads(1)  if (FALSE) { # Set up a \"fake\" shiny session to store data session <- shiny::MockShinySession$new() session$userData <- list(   current_page_id = \"other_page\",   questionnaire_data = list(     example_page = list()   ) )  # This code is expected to be run in e.g. run_before or run_after # It doesn't really make sense to run this code outside set_item_data(   session = session,   page_id = \"example_page\",   question_text = \"How are you?\" )  set_item_data(   session = session,   page_id = \"example_page\",   response_id = 3,   response_text = \"I'm doing great! (response_id = 3)\" ) }"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/set_page_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Set some values in the page/questionnaire data in the current session. ‚Äî set_page_data","title":"Set some values in the page/questionnaire data in the current session. ‚Äî set_page_data","text":"Data automatically linked page's page_id. Note page data automatically saved probably want use set_item_data instead.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/set_page_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set some values in the page/questionnaire data in the current session. ‚Äî set_page_data","text":"","code":"set_page_data(session, page_id, values)"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/set_page_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set some values in the page/questionnaire data in the current session. ‚Äî set_page_data","text":"session shiny session values named list values add / overwrite page data. Values added / overwritten based names provided list.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/set_page_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set some values in the page/questionnaire data in the current session. ‚Äî set_page_data","text":"nothing","code":""},{"path":[]},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/train_similarity_based_reasoning.html","id":null,"dir":"Reference","previous_headings":"","what":"Train Similarity Based Probability Model with anonymized training data ‚Äî train_similarity_based_reasoning","title":"Train Similarity Based Probability Model with anonymized training data ‚Äî train_similarity_based_reasoning","text":"function requires mvtnorm package.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/train_similarity_based_reasoning.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train Similarity Based Probability Model with anonymized training data ‚Äî train_similarity_based_reasoning","text":"","code":"train_similarity_based_reasoning(   anonymized_data,   num_allowed_codes = 1291,   coding_index_w_codes,   coding_index_without_codes = NULL,   preprocessing = list(stopwords = NULL, stemming = NULL, strPreprocessing = TRUE,     removePunct = FALSE),   dist_type = c(\"wordwise\", \"substring\", \"fulltext\"),   dist_control = list(method = \"osa\", weight = c(d = 1, i = 1, s = 1, t = 1)),   threshold = c(max = 3, use = 1),   simulation_control = list(n.draws = 250, check_normality = FALSE) )"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/train_similarity_based_reasoning.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Train Similarity Based Probability Model with anonymized training data ‚Äî train_similarity_based_reasoning","text":"anonymized_data surveyCountsSubstringSimilarity surveyCountsWordwiseSimilarity num_allowed_codes number allowed codes target classification. 1286 categories KldB 2010 plus 5 special codes anonymized training data sets, default value 1291. coding_index_w_codes data.table columns bezMale character vector, contains masculine job titles coding index. bezFemale character vector, contains feminine job titles coding index. Code character vector associated classification codes. coding_index_without_codes (used, automatically determined) words anonymized_data$dictString found within coding_index_w_codes belong character vector. preprocessing list elements stopwords character vector, use tm::stopwords(\"de\") German stopwords. used dist_type = \"wordwise\". stemming NULL stemming \"de\" stemming using German porter stemmer. use unless job titles coding_index_w_codes stemmed. strPreprocessing TRUE preprocess_string shall used. removePunct TRUE removePunctuation shall used. dist_type calculate similarity entries coding_indices verbal answers survey? Three options currently supported.  Since use stringdist-function excessively, one easily extend functionality procedure distance metrics. dist_type = \"fulltext\" Uses stringdist-function directly preprocessing calculate distances. (simplest approach least useful.) dist_type = \"substring\" entry coding index verbal answer similar entry coding index substring verbal answer. dist_type = \"wordwise\" preprocessing, split verbal answer words. calculate word separately similarity entries coding index, using stringdist. complete verbal answer words (0 ) highest similarity used determine similarity entries coding index. dist_control dist_type = \"fulltext\" dist_type = \"wordwise\" entries list passed stringdist. Currently two possible entries supported (method = \"osa\", weight = c(d = 1, = 1, s = 1, t = 1) recommended), one easily extend functionality. threshold numeric vector two elements. dist_type = \"fulltext\" dist_type = \"wordwise\", threshold determines distance verbal answer entry coding index similar. second number actually gets used. first number used speed similarity calculations. identical larger second number. simulation_control list two components, n.draws Number draws posterior distribution determine posterior predictive probabilities. larger, precise results . check_normality like hyperprior distribution normal. Set check_normality TRUE diagnostics .","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/train_similarity_based_reasoning.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Train Similarity Based Probability Model with anonymized training data ‚Äî train_similarity_based_reasoning","text":"list components prediction.datasets$modelProb Contains entries coding index. dist = \"official\" entry stems coding_index_w_codes dist = selfcreated entry stems coding_index_without_codes. string.prob used weighting purposes (model averaging) new verbal answer similar multiple strings. unobserved.mean.theta gives probability (usually low) category observed training data together string. prediction.datasets$categoryProb mean.theta probability code given incoming verbal answer similar string. available code least single time observed string (Use unobserved.mean.theta otherwise). num_allowed_codes Number categories classification. preprocessing input parameter stored replicate preprocessing incoming data. dist_type input parameter stored replicate distance calculations incoming data. dist_control input parameter stored replicate distance calculations incoming data. threshold input parameter stored replicate distance calculations incoming data. simulation_control input parameters controlling Monte Carlo simulation.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/train_similarity_based_reasoning.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Train Similarity Based Probability Model with anonymized training data ‚Äî train_similarity_based_reasoning","text":"Schierholz, Malte (2019): New methods job occupation classification. Dissertation, Mannheim. https://madoc.bib.uni-mannheim.de/50617/, pp. 206-208 p. 268, pp. 308-320 https://github.com/malsch/occupationCoding (function trainSimilarityBasedReasoning2 implemented )","code":""},{"path":[]},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/validate_questionnaire.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate (and sanitize the questionnaire) ‚Äî validate_questionnaire","title":"Validate (and sanitize the questionnaire) ‚Äî validate_questionnaire","text":"Validate (sanitize questionnaire)","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/validate_questionnaire.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate (and sanitize the questionnaire) ‚Äî validate_questionnaire","text":"","code":"validate_questionnaire(questionnaire, verbose)"},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/validate_questionnaire.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate (and sanitize the questionnaire) ‚Äî validate_questionnaire","text":"questionnaire questionnaire passed app() verbose information questionnaire printed?","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/reference/validate_questionnaire.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate (and sanitize the questionnaire) ‚Äî validate_questionnaire","text":"Sanitized questionnaire","code":""},{"path":[]},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/news/index.html","id":"occupationmeasurement-031","dir":"Changelog","previous_headings":"","what":"occupationMeasurement 0.3.1","title":"occupationMeasurement 0.3.1","text":"CRAN release: 2023-09-25 Gracefully handle unavailability KldB 2010 classification","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/news/index.html","id":"occupationmeasurement-030","dir":"Changelog","previous_headings":"","what":"occupationMeasurement 0.3.0","title":"occupationMeasurement 0.3.0","text":"release accompanying article Journal Open Source Software auxiliary classification (AuxCo) upgraded v1.2.3 bug test cases fixed package installed CRAN (#7) Suggests dependencies slimmed include packages actually referenced code lead issues R CMD CHECK. avoid additional reverse dependencies packages. (#5) minor additional changes updating wording vignettes improving legibility code affect functioning package.","code":""},{"path":"https://occupationmeasurement.github.io/occupationMeasurement/news/index.html","id":"occupationmeasurement-020","dir":"Changelog","previous_headings":"","what":"occupationMeasurement 0.2.0","title":"occupationMeasurement 0.2.0","text":"CRAN release: 2023-03-21 Initial release package Added NEWS.md file track changes package.","code":""}]
