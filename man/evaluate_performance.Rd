% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/evaluation.R
\name{evaluate_performance}
\alias{evaluate_performance}
\title{Evaluate the Potential Predictive Performance of the Interactive App}
\usage{
evaluate_performance(
  test_data,
  freetext_colname,
  code_colname,
  code_format = "kldb-2010",
  followup_questions = TRUE,
  app_settings = create_app_settings(.validate = FALSE),
  suggestion_type_options = NULL
)
}
\arguments{
\item{test_data}{A data.frame or data.table with at least two columns,
containing free text responses and the corresponding occupational
classification codes.}

\item{freetext_colname}{The name of the column containing freetext responses.}

\item{code_colname}{The name of the column containing occupational
classification codes.}

\item{code_format}{The coding format of the occupational classification codes
possible values are "kldb-2010" or "isco-08".
Defaults to "kldb-2010".}

\item{followup_questions}{Should occupational classification codes based on
answers to followup questions be included? See the function description for
a detailed explanation. Setting this to \code{TRUE} most likely leads to a
\emph{slight overestimation} of performance, setting this to \code{FALSE} most likely
leads to a \emph{severe underestimation} of performance.
This only applies if app_settings$suggestion_type is \code{TRUE}.}

\item{app_settings}{The app_settings you plan to use with \code{\link[=app]{app()}}. Check the
documentation for create_app_settings to learn about the options.
Especially options related to the generation of suggestions are relevant.}

\item{suggestion_type_options}{A list with options for generating
suggestions. Only interesting if you plan to use a custom version of e.g.
the AuxCo or other coding systems.}
}
\value{
An invisible list with aggregated scores (\verb{$score}) and a detailed
performance report in form of a data.table (\verb{$data}).
}
\description{
This function takes in a dataframe that contains free text responses and
their accompanying occupational classification codes. It will then generate
suggestions for each of these free text responses and will check whether
the provided occupational classification code overlaps with the codes that
could be reached by the suggestions.
}
\details{
Because our interactive coding app uses followup questions to explicitly ask
for e.g. the level of supervision a respondent may have, one suggested answer
may correspond to multiple occupational classification codes. This function
will therefore \emph{slightly overestimate} performance, as we assume that
respondents will answer the followup questions in the correct way to arrive
the final code. This problem can unfortunately not be solved, as ignoring the
potential different codings based on followup answers, would lead to a
\emph{severe underestimation} of performance.

This function sohuld still be able to provide you with a rough estimate of
what levels of performance to expect when employing the tool in the field.
}
\examples{
evaluate_performance(
  test_data = data.frame(
    freetext_answer = c(
      "Koch",
      "Bäcker",
      "Donaudampschifffahrtskapitän",
      "Arbeiter"
    ),
    kldb_code = c(
      "29302",
      "29222",
      "52423",
      "72213"
    )
  ),
  freetext_colname = "freetext_answer",
  code_colname = "kldb_code",
  code_format = "kldb-2010"
)
}
